{
  "contractName": "Collectables",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_pricePerCollectable",
          "type": "uint256"
        }
      ],
      "name": "pricePerCollectableUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_visitor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "visitorRewarded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "EscapeRoomCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "EscaperoomAdmins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Escaperooms",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_Id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_Name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_Admin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TotalCollectables",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_enabled",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "PricePerCollectable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "burnBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mintBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_EscaperoomAdmin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_Name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_FreeCollectables",
          "type": "uint256"
        }
      ],
      "name": "createNewEscaperoom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_visitor",
          "type": "address"
        }
      ],
      "name": "rewardVisitor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_visitors",
          "type": "address[]"
        }
      ],
      "name": "rewardVisitorBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_Amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_Amount",
          "type": "uint256"
        }
      ],
      "name": "mintAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newPricePerCollectable",
          "type": "uint256"
        }
      ],
      "name": "setPricePerCollectable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_pricePerCollectable\",\"type\":\"uint256\"}],\"name\":\"pricePerCollectableUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_visitor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"visitorRewarded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EscapeRoomCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"EscaperoomAdmins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Escaperooms\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_Id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_Name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_Admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_TotalCollectables\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PricePerCollectable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_EscaperoomAdmin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_Name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_FreeCollectables\",\"type\":\"uint256\"}],\"name\":\"createNewEscaperoom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_Amount\",\"type\":\"uint256\"}],\"name\":\"mintAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_visitor\",\"type\":\"address\"}],\"name\":\"rewardVisitor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_visitors\",\"type\":\"address[]\"}],\"name\":\"rewardVisitorBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPricePerCollectable\",\"type\":\"uint256\"}],\"name\":\"setPricePerCollectable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Arnoud Commandeur\",\"details\":\"Contract based on OpenZeppelin ERC1155PresetMinterPauser.sol contract\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"The URI is not in use yet, but can be used to retrieve off chain values about a token\"},\"createNewEscaperoom(address,string,uint256)\":{\"details\":\"This function uses the OpenZeppelin Roles contract for checking the propriate address of the caller \",\"params\":{\"_EscaperoomAdmin\":\"The address of the new admin of the new escape room\",\"_FreeCollectables\":\"The number of tokens the new escape room will recieve for free\",\"_Name\":\"The name of the new escape room\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256,bytes)\":{\"details\":\"Creates `amount` new tokens for `to`, of token type `id`.     * See {ERC1155-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`.\"},\"mint(uint256,uint256)\":{\"details\":\"Function can only be invoked by the admin of the escape room\",\"params\":{\"_Amount\":\"The number of new tokens to mint\",\"_id\":\"The ID of the escape room\"}},\"mintAdmin(uint256,uint256)\":{\"details\":\"Function can only be invoked by the admin of the contract (via OpenZeppeling membership)\",\"params\":{\"_Amount\":\"The number of new tokens to mint (for free)\",\"_id\":\"The ID of the escape room\"}},\"mintBatch(address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\"},\"pause()\":{\"details\":\"Pauses all token transfers.     * See {ERC1155Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"rewardVisitor(uint256,address)\":{\"details\":\"This function can only be called by the admin of the escape room \",\"params\":{\"_id\":\"The ID of the escape room\",\"_visitor\":\"The visitor that must be rewarded\"}},\"rewardVisitorBatch(uint256,address[])\":{\"details\":\"Function could be rewritten to safeBatchTransferFrom. Only reward user when user has not already been rewarded \",\"params\":{\"_id\":\"The ID of the escape room\",\"_visitors\":\"The visitors that must be rewarded\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"setPricePerCollectable(uint256)\":{\"details\":\"Function can only be invoked by the admin of the contract (via OpenZeppeling membership), price >= 0\",\"params\":{\"_newPricePerCollectable\":\"The new price in wei per token for all escape rooms\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.     * See {ERC1155Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"A contract for collecting NFT as a reward for completing an Escape Room\"},\"userdoc\":{\"methods\":{\"constructor\":\"This function is executed when the contract is deployed to the Ethereum blockchain\",\"createNewEscaperoom(address,string,uint256)\":{\"notice\":\"This function creates a new Escape Room and gives free tokens once\"},\"mint(uint256,uint256)\":{\"notice\":\"This function mints new tokens for a escape room after paying the correct amount of ether (tokens * price) \"},\"mintAdmin(uint256,uint256)\":{\"notice\":\"This function mints new tokens for a escape room without paying ether \"},\"rewardVisitor(uint256,address)\":{\"notice\":\"This function rewards the visitor of an escape room. After rewarding the event visitorRewarded is emitted\"},\"rewardVisitorBatch(uint256,address[])\":{\"notice\":\"This function rewards multiple visitors of an escape room. After rewarding the event visitorRewarded is emitted per visitor\"},\"setPricePerCollectable(uint256)\":{\"notice\":\"This function sets the new price per token in wei and emits the pricePerCollectableUpdated after completing\"}},\"notice\":\"At the moment 1 address is only able to have 1 type of NFT, in futere 1 address should be able to handle multiple NFT's (rooms to reward) \"}},\"settings\":{\"compilationTarget\":{\"/C/Users/arnou/OneDrive - Infent/Infent/Blockchain/Escaperoom/contracts/Collectables.sol\":\"Collectables\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/arnou/OneDrive - Infent/Infent/Blockchain/Escaperoom/contracts/Collectables.sol\":{\"keccak256\":\"0xa8de80992cbcb76385fb44ce4e5e667514378e34a7afa502c491cd739fd5e735\",\"urls\":[\"bzz-raw://db9a469da58060beca8c179d885237a0e32a51f57e3576c169ffc81ae90f18ac\",\"dweb:/ipfs/QmWLoQ7SE4vfDV3g4DaZwm6G1U9iFKJajgXNqdPYqekyWx\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/presets/ERC1155PresetMinterPauser.sol\":{\"keccak256\":\"0x6a025633e41e31e57b8f5ccc147fec17608953db0baf77d0a9baa543244d00eb\",\"urls\":[\"bzz-raw://b55c50a91a8ba6e204c6f5db987a63b3531965b2f3cca3a5512224eec9f3f1ef\",\"dweb:/ipfs/QmdJAKfoMS3RPA1x9M4KRJbQWGgLbZ8giHA4F5eJeGkRJb\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155Burnable.sol\":{\"keccak256\":\"0x2b30e87a7188124f4a198195f7d660149e1ed59ec587c1122239a266ec173937\",\"urls\":[\"bzz-raw://645e8db35eb4e70a94ef52d9d994f7442b550c939df2e860b60939c6cbaea284\",\"dweb:/ipfs/QmZN92zh4xMa1DrxA2223cfWsvrj25GNXjT1DDbDpUzHJ4\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155Pausable.sol\":{\"keccak256\":\"0x382b29d273adccf7a56ba97e9df5738298678a212cb3fadd3d52bd1adc462f4d\",\"urls\":[\"bzz-raw://633909e3de10ca6d76ee2d5a5eae44e9e6410dbccb13eb5b23d1b1efc327fdd8\",\"dweb:/ipfs/QmdSjUAeYCufQixwruKdhm763DmTVnygZ3aeCZpZ9qCPv1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060065560006007553480156200001b57600080fd5b506040518060600160405280603881526020016200438f60389139806200006b7f01ffc9a700000000000000000000000000000000000000000000000000000000640100000000620001b5810204565b6200007f8164010000000062000287810204565b620000b37fd9b67a2600000000000000000000000000000000000000000000000000000000640100000000620001b5810204565b620000e77f0e89341c00000000000000000000000000000000000000000000000000000000640100000000620001b5810204565b506005805460ff191690556200011a60006200010b640100000000620002a0810204565b640100000000620002a5810204565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902062000164906200010b640100000000620002a0810204565b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020620001ae906200010b640100000000620002a0810204565b506200047a565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200024757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152600160208190526040909120805460ff19169091179055565b80516200029c906004906020840190620003d8565b5050565b335b90565b6200029c8282640100000000620002ba810204565b6000828152602081905260409020620002e29082640100000000620037766200033f82021704565b156200029c57620002fb640100000000620002a0810204565b600160a060020a031681600160a060020a0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200035f83600160a060020a03841664010000000062000368810204565b90505b92915050565b60006200037f8383640100000000620003c0810204565b620003b75750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000362565b50600062000362565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200041b57805160ff19168380011785556200044b565b828001600101855582156200044b579182015b828111156200044b5782518255916020019190600101906200042e565b50620004599291506200045d565b5090565b620002a291905b8082111562000459576000815560010162000464565b613f05806200048a6000396000f3fe6080604052600436106102075760003560e060020a90048063731133e91161011c578063b6498859116100a4578063d547741f11610073578063d547741f14610fc8578063e63ab1e914611001578063e985e9c514611016578063f242432a14611051578063f5298aca1461112957610207565b8063b649885914610f44578063c47cbb1414610f74578063ca15c87314610f89578063d539139314610fb357610207565b806391d14854116100eb57806391d1485414610d22578063a217fddf14610d5b578063a22cb46514610d70578063a8a3b13d14610dab578063b30ca4d814610e7f57610207565b8063731133e914610bbf5780638456cb5914610c8e57806385aa4cde14610ca35780639010d07c14610cd657610207565b80632f2ff15d1161019f5780634e1273f41161016e5780634e1273f41461087f5780634e135adb14610a035780635c975abb14610a2d578063600c071814610a425780636b20c45414610a7b57610207565b80632f2ff15d146107e357806336568abe1461081c5780633f4ba83a146108555780634049ffca1461086a57610207565b80631b2ef1ca116101db5780631b2ef1ca146103f75780631f7fdffa1461041a578063248a9ca3146105e55780632eb2c2d61461060f57610207565b8062fdd58e1461020c57806301ffc9a7146102575780630841a43d1461029f5780630e89341c14610358575b600080fd5b34801561021857600080fd5b506102456004803603604081101561022f57600080fd5b50600160a060020a038135169060200135611168565b60408051918252519081900360200190f35b34801561026357600080fd5b5061028b6004803603602081101561027a57600080fd5b5035600160e060020a0319166111dd565b604080519115158252519081900360200190f35b3480156102ab57600080fd5b50610356600480360360408110156102c257600080fd5b813591908101906040810160208201356401000000008111156102e457600080fd5b8201836020820111156102f657600080fd5b8035906020019184602083028401116401000000008311171561031857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506111fc945050505050565b005b34801561036457600080fd5b506103826004803603602081101561037b57600080fd5b5035611327565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103bc5781810151838201526020016103a4565b50505050905090810190601f1680156103e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103566004803603604081101561040d57600080fd5b50803590602001356113bf565b34801561042657600080fd5b506103566004803603608081101561043d57600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561046857600080fd5b82018360208201111561047a57600080fd5b8035906020019184602083028401116401000000008311171561049c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156104ec57600080fd5b8201836020820111156104fe57600080fd5b8035906020019184602083028401116401000000008311171561052057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561057057600080fd5b82018360208201111561058257600080fd5b803590602001918460018302840111640100000000831117156105a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611548945050505050565b3480156105f157600080fd5b506102456004803603602081101561060857600080fd5b50356115db565b34801561061b57600080fd5b50610356600480360360a081101561063257600080fd5b600160a060020a03823581169260208101359091169181019060608101604082013564010000000081111561066657600080fd5b82018360208201111561067857600080fd5b8035906020019184602083028401116401000000008311171561069a57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156106ea57600080fd5b8201836020820111156106fc57600080fd5b8035906020019184602083028401116401000000008311171561071e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561076e57600080fd5b82018360208201111561078057600080fd5b803590602001918460018302840111640100000000831117156107a257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506115f0945050505050565b3480156107ef57600080fd5b506103566004803603604081101561080657600080fd5b5080359060200135600160a060020a03166118fc565b34801561082857600080fd5b506103566004803603604081101561083f57600080fd5b5080359060200135600160a060020a0316611966565b34801561086157600080fd5b506103566119ca565b34801561087657600080fd5b50610245611a50565b34801561088b57600080fd5b506109b3600480360360408110156108a257600080fd5b8101906020810181356401000000008111156108bd57600080fd5b8201836020820111156108cf57600080fd5b803590602001918460208302840111640100000000831117156108f157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561094157600080fd5b82018360208201111561095357600080fd5b8035906020019184602083028401116401000000008311171561097557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611a56945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156109ef5781810151838201526020016109d7565b505050509050019250505060405180910390f35b348015610a0f57600080fd5b5061035660048036036020811015610a2657600080fd5b5035611bc3565b348015610a3957600080fd5b5061028b611c4f565b348015610a4e57600080fd5b5061035660048036036040811015610a6557600080fd5b5080359060200135600160a060020a0316611c59565b348015610a8757600080fd5b5061035660048036036060811015610a9e57600080fd5b600160a060020a038235169190810190604081016020820135640100000000811115610ac957600080fd5b820183602082011115610adb57600080fd5b80359060200191846020830284011164010000000083111715610afd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610b4d57600080fd5b820183602082011115610b5f57600080fd5b80359060200191846020830284011164010000000083111715610b8157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d6f945050505050565b348015610bcb57600080fd5b5061035660048036036080811015610be257600080fd5b600160a060020a038235169160208101359160408201359190810190608081016060820135640100000000811115610c1957600080fd5b820183602082011115610c2b57600080fd5b80359060200191846001830284011164010000000083111715610c4d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611de6945050505050565b348015610c9a57600080fd5b50610356611e6e565b348015610caf57600080fd5b5061024560048036036020811015610cc657600080fd5b5035600160a060020a0316611ef2565b348015610ce257600080fd5b50610d0660048036036040811015610cf957600080fd5b5080359060200135611f04565b60408051600160a060020a039092168252519081900360200190f35b348015610d2e57600080fd5b5061028b60048036036040811015610d4557600080fd5b5080359060200135600160a060020a0316611f29565b348015610d6757600080fd5b50610245611f47565b348015610d7c57600080fd5b5061035660048036036040811015610d9357600080fd5b50600160a060020a0381351690602001351515611f4c565b348015610db757600080fd5b50610dd560048036036020811015610dce57600080fd5b503561203e565b604051808681526020018060200185600160a060020a0316600160a060020a0316815260200184815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b83811015610e40578181015183820152602001610e28565b50505050905090810190601f168015610e6d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610e8b57600080fd5b5061035660048036036060811015610ea257600080fd5b600160a060020a038235169190810190604081016020820135640100000000811115610ecd57600080fd5b820183602082011115610edf57600080fd5b80359060200191846001830284011164010000000083111715610f0157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250612106915050565b348015610f5057600080fd5b5061035660048036036040811015610f6757600080fd5b50803590602001356122fb565b348015610f8057600080fd5b506102456123a1565b348015610f9557600080fd5b5061024560048036036020811015610fac57600080fd5b50356123a7565b348015610fbf57600080fd5b506102456123be565b348015610fd457600080fd5b5061035660048036036040811015610feb57600080fd5b5080359060200135600160a060020a03166123f3565b34801561100d57600080fd5b5061024561244f565b34801561102257600080fd5b5061028b6004803603604081101561103957600080fd5b50600160a060020a0381358116916020013516612484565b34801561105d57600080fd5b50610356600480360360a081101561107457600080fd5b600160a060020a03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156110b457600080fd5b8201836020820111156110c657600080fd5b803590602001918460018302840111640100000000831117156110e857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506124b2945050505050565b34801561113557600080fd5b506103566004803603606081101561114c57600080fd5b50600160a060020a038135169060208101359060400135612689565b6000600160a060020a0383166111b25760405160e560020a62461bcd02815260040180806020018281038252602b815260200180613ab3602b913960400191505060405180910390fd5b506000818152600260209081526040808320600160a060020a03861684529091529020545b92915050565b600160e060020a03191660009081526001602052604090205460ff1690565b33600090815260096020526040902054821461124c5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613cf1602e913960400191505060405180910390fd5b60005b81518110156113225761127582828151811061126757fe5b602002602001015184611168565b61131a576112cf3383838151811061128957fe5b60200260200101518560016040518060400160405280600281526020017f30780000000000000000000000000000000000000000000000000000000000008152506124b2565b828282815181106112dc57fe5b6020026020010151600160a060020a03167f08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f560405160405180910390a35b60010161124f565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156113b35780601f10611388576101008083540402835291602001916113b3565b820191906000526020600020905b81548152906001019060200180831161139657829003601f168201915b50505050509050919050565b33600090815260096020526040902054821461140f5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613cf1602e913960400191505060405180910390fd5b60008111611467576040805160e560020a62461bcd02815260206004820152601a60248201527f4552524f523a205f416d6f756e74206d757374206265203e2030000000000000604482015290519081900360640190fd5b60075461147b90829063ffffffff61270016565b34146114d1576040805160e560020a62461bcd02815260206004820152601f60248201527f4552524f523a20546f6f206d7563682f6c6573732065746865722073656e7400604482015290519081900360640190fd5b6000828152600860209081526040808320600201548151928301909152918152600160a060020a039091169061150c9082908590859061275c565b60008381526008602052604090206003015461152e908363ffffffff61286d16565b600093845260086020526040909320600301929092555050565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902061158b906115866128ca565b611f29565b6115c95760405160e560020a62461bcd028152600401808060200182810382526038815260200180613c326038913960400191505060405180910390fd5b6115d5848484846128ce565b50505050565b60009081526020819052604090206002015490565b81518351146116335760405160e560020a62461bcd028152600401808060200182810382526028815260200180613e586028913960400191505060405180910390fd5b600160a060020a03841661167b5760405160e560020a62461bcd028152600401808060200182810382526025815260200180613bb86025913960400191505060405180910390fd5b6116836128ca565b600160a060020a031685600160a060020a031614806116ae57506116ae856116a96128ca565b612484565b6116ec5760405160e560020a62461bcd028152600401808060200182810382526032815260200180613bdd6032913960400191505060405180910390fd5b60006116f66128ca565b9050611706818787878787612b22565b60005b845181101561180c57600085828151811061172057fe5b60200260200101519050600085838151811061173857fe5b602002602001015190506117a5816040518060600160405280602a8152602001613c6a602a91396002600086815260200190815260200160002060008d600160a060020a0316600160a060020a0316815260200190815260200160002054612b309092919063ffffffff16565b6000838152600260209081526040808320600160a060020a038e811685529252808320939093558a16815220546117dc908261286d565b6000928352600260209081526040808520600160a060020a038c1686529091529092209190915550600101611709565b5084600160a060020a031686600160a060020a031682600160a060020a03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561189257818101518382015260200161187a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156118d15781810151838201526020016118b9565b5050505090500194505050505060405180910390a46118f4818787878787612bca565b505050505050565b60008281526020819052604090206002015461191a906115866128ca565b6119585760405160e560020a62461bcd02815260040180806020018281038252602f815260200180613a84602f913960400191505060405180910390fd5b6119628282612f30565b5050565b61196e6128ca565b600160a060020a031681600160a060020a0316146119c05760405160e560020a62461bcd02815260040180806020018281038252602f815260200180613ea1602f913960400191505060405180910390fd5b6119628282612f9f565b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020611a08906115866128ca565b611a465760405160e560020a62461bcd02815260040180806020018281038252603b815260200180613d6f603b913960400191505060405180910390fd5b611a4e61300e565b565b60065481565b60608151835114611a9b5760405160e560020a62461bcd028152600401808060200182810382526029815260200180613e2f6029913960400191505060405180910390fd5b60608351604051908082528060200260200182016040528015611ac8578160200160208202803883390190505b50905060005b8451811015611bbb576000600160a060020a0316858281518110611aee57fe5b6020026020010151600160a060020a03161415611b3f5760405160e560020a62461bcd028152600401808060200182810382526031815260200180613ade6031913960400191505060405180910390fd5b60026000858381518110611b4f57fe5b602002602001015181526020019081526020016000206000868381518110611b7357fe5b6020026020010151600160a060020a0316600160a060020a0316815260200190815260200160002054828281518110611ba857fe5b6020908102919091010152600101611ace565b509392505050565b611bce600033611f29565b1515600114611c115760405160e560020a62461bcd02815260040180806020018281038252603c815260200180613cb5603c913960400191505060405180910390fd5b600781905560408051828152905133917f6d55988fd84c3eae3398916f51ca9d47bf4e053e5a444b72ee7583fc0143ebc3919081900360200190a250565b60055460ff165b90565b336000908152600960205260409020548214611ca95760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613cf1602e913960400191505060405180910390fd5b611cb38183611168565b15611cf25760405160e560020a62461bcd028152600401808060200182810382526023815260200180613de36023913960400191505060405180910390fd5b611d3533828460016040518060400160405280600281526020017f30780000000000000000000000000000000000000000000000000000000000008152506124b2565b6040518290600160a060020a038316907f08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f590600090a35050565b611d776128ca565b600160a060020a031683600160a060020a03161480611d9d5750611d9d836116a96128ca565b611ddb5760405160e560020a62461bcd028152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b6113228383836130b8565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020611e24906115866128ca565b611e625760405160e560020a62461bcd028152600401808060200182810382526038815260200180613c326038913960400191505060405180910390fd5b6115d58484848461275c565b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020611eac906115866128ca565b611eea5760405160e560020a62461bcd028152600401808060200182810382526039815260200180613daa6039913960400191505060405180910390fd5b611a4e61332c565b60096020526000908152604090205481565b6000828152602081905260408120611f22908363ffffffff6133bd16565b9392505050565b6000828152602081905260408120611f22908363ffffffff6133c916565b600081565b81600160a060020a0316611f5e6128ca565b600160a060020a03161415611fa75760405160e560020a62461bcd028152600401808060200182810382526029815260200180613e066029913960400191505060405180910390fd5b8060036000611fb46128ca565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611ff86128ca565b6040805184151581529051600160a060020a0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6008602090815260009182526040918290208054600180830180548651600293821615610100026000190190911692909204601f8101869004860283018601909652858252919492939092908301828280156120db5780601f106120b0576101008083540402835291602001916120db565b820191906000526020600020905b8154815290600101906020018083116120be57829003601f168201915b50505050600283015460038401546004909401549293600160a060020a039091169290915060ff1685565b612111600033611f29565b15156001146121545760405160e560020a62461bcd02815260040180806020018281038252603c815260200180613cb5603c913960400191505060405180910390fd5b600160a060020a03831661219c5760405160e560020a62461bcd028152600401808060200182810382526022815260200180613d1f6022913960400191505060405180910390fd5b600160a060020a038316600090815260096020526040902054156121f45760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613d41602e913960400191505060405180910390fd5b60065461220890600163ffffffff61286d16565b6006819055600160a060020a03841660009081526009602052604090205561222e613933565b6006548082526020808301858152600160a060020a03871660408086019190915260608501869052600160808601819052600094855260088452932084518155905180518594929361228493850192019061396d565b5060408281015160028301805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606083015160038301556080909201516004909101805460ff1916911515919091179055600654815160208101909252600082526115d591869190859061275c565b612306600033611f29565b15156001146123495760405160e560020a62461bcd02815260040180806020018281038252603c815260200180613cb5603c913960400191505060405180910390fd5b600081116114d1576040805160e560020a62461bcd02815260206004820152601a60248201527f4552524f523a205f416d6f756e74206d757374206265203e2030000000000000604482015290519081900360640190fd5b60075481565b60008181526020819052604081206111d7906133de565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902081565b600082815260208190526040902060020154612411906115866128ca565b6119c05760405160e560020a62461bcd028152600401808060200182810382526030815260200180613b886030913960400191505060405180910390fd5b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902081565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205460ff1690565b600160a060020a0384166124fa5760405160e560020a62461bcd028152600401808060200182810382526025815260200180613bb86025913960400191505060405180910390fd5b6125026128ca565b600160a060020a031685600160a060020a031614806125285750612528856116a96128ca565b6125665760405160e560020a62461bcd028152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b60006125706128ca565b9050612590818787612581886133e9565b61258a886133e9565b87612b22565b6125dd836040518060600160405280602a8152602001613c6a602a91396000878152600260209081526040808320600160a060020a038d168452909152902054919063ffffffff612b3016565b6000858152600260209081526040808320600160a060020a038b81168552925280832093909355871681522054612614908461286d565b6000858152600260209081526040808320600160a060020a03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46118f481878787878761342d565b6126916128ca565b600160a060020a031683600160a060020a031614806126b757506126b7836116a96128ca565b6126f55760405160e560020a62461bcd028152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b6113228383836135df565b60008261270f575060006111d7565b8282028284828161271c57fe5b0414611f225760405160e560020a62461bcd028152600401808060200182810382526021815260200180613c946021913960400191505060405180910390fd5b600160a060020a0384166127a45760405160e560020a62461bcd028152600401808060200182810382526021815260200180613e806021913960400191505060405180910390fd5b60006127ae6128ca565b90506127c081600087612581886133e9565b6000848152600260209081526040808320600160a060020a03891684529091529020546127f3908463ffffffff61286d16565b6000858152600260209081526040808320600160a060020a03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46128668160008787878761342d565b5050505050565b600082820183811015611f22576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b600160a060020a0384166129165760405160e560020a62461bcd028152600401808060200182810382526021815260200180613e806021913960400191505060405180910390fd5b81518351146129595760405160e560020a62461bcd028152600401808060200182810382526028815260200180613e586028913960400191505060405180910390fd5b60006129636128ca565b905061297481600087878787612b22565b60005b8451811015612a38576129ef6002600087848151811061299357fe5b60200260200101518152602001908152602001600020600088600160a060020a0316600160a060020a03168152602001908152602001600020548583815181106129d957fe5b602002602001015161286d90919063ffffffff16565b600260008784815181106129ff57fe5b60209081029190910181015182528181019290925260409081016000908120600160a060020a038b168252909252902055600101612977565b5084600160a060020a03166000600160a060020a031682600160a060020a03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015612abf578181015183820152602001612aa7565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015612afe578181015183820152602001612ae6565b5050505090500194505050505060405180910390a461286681600087878787612bca565b6118f486868686868661371b565b60008184841115612bc25760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b87578181015183820152602001612b6f565b50505050905090810190601f168015612bb45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612bdc84600160a060020a0316613770565b156118f45783600160a060020a031663bc197c8187878686866040518663ffffffff1660e060020a0281526004018086600160a060020a0316600160a060020a0316815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612c7f578181015183820152602001612c67565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015612cbe578181015183820152602001612ca6565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612cfa578181015183820152602001612ce2565b50505050905090810190601f168015612d275780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015612d4c57600080fd5b505af1925050508015612d7157506040513d6020811015612d6c57600080fd5b505160015b612ebc576040516000815260443d1015612d8d57506000612e2d565b60046000803e60e060020a600051046308c379a08114612db1576000915050612e2d565b60043d036004833e81513d602482011167ffffffffffffffff82111715612ddd57600092505050612e2d565b808301805167ffffffffffffffff811115612dff576000945050505050612e2d565b8060208301013d8601811115612e1d57600095505050505050612e2d565b601f01601f191660405250925050505b80612e385750612e82565b60405160e560020a62461bcd028152602060048201818152835160248401528351849391928392604401919085019080838360008315612b87578181015183820152602001612b6f565b60405160e560020a62461bcd028152600401808060200182810382526034815260200180613a066034913960400191505060405180910390fd5b600160e060020a031981167fbc197c810000000000000000000000000000000000000000000000000000000014612f275760405160e560020a62461bcd028152600401808060200182810382526028815260200180613a5c6028913960400191505060405180910390fd5b50505050505050565b6000828152602081905260409020612f4e908263ffffffff61377616565b1561196257612f5b6128ca565b600160a060020a031681600160a060020a0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020612fbd908263ffffffff61378b16565b1561196257612fca6128ca565b600160a060020a031681600160a060020a0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60055460ff16613068576040805160e560020a62461bcd02815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61309b6128ca565b60408051600160a060020a039092168252519081900360200190a1565b600160a060020a0383166131005760405160e560020a62461bcd028152600401808060200182810382526023815260200180613c0f6023913960400191505060405180910390fd5b80518251146131435760405160e560020a62461bcd028152600401808060200182810382526028815260200180613e586028913960400191505060405180910390fd5b600061314d6128ca565b905061316d81856000868660405180602001604052806000815250612b22565b60005b835181101561324b5761320283828151811061318857fe5b6020026020010151604051806060016040528060248152602001613b0f60249139600260008886815181106131b957fe5b60200260200101518152602001908152602001600020600089600160a060020a0316600160a060020a0316815260200190815260200160002054612b309092919063ffffffff16565b6002600086848151811061321257fe5b60209081029190910181015182528181019290925260409081016000908120600160a060020a038a168252909252902055600101613170565b506000600160a060020a031684600160a060020a031682600160a060020a03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156132d25781810151838201526020016132ba565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156133115781810151838201526020016132f9565b5050505090500194505050505060405180910390a450505050565b60055460ff1615613387576040805160e560020a62461bcd02815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861309b6128ca565b6000611f2283836137a0565b6000611f2283600160a060020a038416613807565b60006111d78261381f565b60408051600180825281830190925260609182919060208083019080388339019050509050828160008151811061341c57fe5b602090810291909101015292915050565b61343f84600160a060020a0316613770565b156118f45783600160a060020a031663f23a6e6187878686866040518663ffffffff1660e060020a0281526004018086600160a060020a0316600160a060020a0316815260200185600160a060020a0316600160a060020a0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156134e35781810151838201526020016134cb565b50505050905090810190601f1680156135105780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561353357600080fd5b505af192505050801561355857506040513d602081101561355357600080fd5b505160015b613574576040516000815260443d1015612d8d57506000612e2d565b600160e060020a031981167ff23a6e610000000000000000000000000000000000000000000000000000000014612f275760405160e560020a62461bcd028152600401808060200182810382526028815260200180613a5c6028913960400191505060405180910390fd5b600160a060020a0383166136275760405160e560020a62461bcd028152600401808060200182810382526023815260200180613c0f6023913960400191505060405180910390fd5b60006136316128ca565b905061366181856000613643876133e9565b61364c876133e9565b60405180602001604052806000815250612b22565b6136ae82604051806060016040528060248152602001613b0f602491396000868152600260209081526040808320600160a060020a038b168452909152902054919063ffffffff612b3016565b6000848152600260209081526040808320600160a060020a03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b6137298686868686866118f4565b613731611c4f565b156118f45760405160e560020a62461bcd02815260040180806020018281038252602c815260200180613b33602c913960400191505060405180910390fd5b3b151590565b6000611f2283600160a060020a038416613823565b6000611f2283600160a060020a03841661386d565b815460009082106137e55760405160e560020a62461bcd028152600401808060200182810382526022815260200180613a3a6022913960400191505060405180910390fd5b8260000182815481106137f457fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600061382f8383613807565b613865575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556111d7565b5060006111d7565b6000818152600183016020526040812054801561392957835460001980830191908101906000908790839081106138a057fe5b90600052602060002001549050808760000184815481106138bd57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806138ed57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506111d7565b60009150506111d7565b6040518060a0016040528060008152602001606081526020016000600160a060020a03168152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139ae57805160ff19168380011785556139db565b828001600101855582156139db579182015b828111156139db5782518255916020019190600101906139c0565b506139e79291506139eb565b5090565b611c5691905b808211156139e757600081556001016139f156fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c654552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d214552524f523a205f457363617065726f6f6d41646d696e20697320696e76616c69644552524f523a205573657220616c72656164792068617320616e2065736361706520726f6f6d206163636f756e74455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f2070617573654552524f523a20557365722068617320636f6c6c65637461626c6520616c7265616479455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122046af4f09dc2b95e350fba2e90ac63f535825b5ec164400a2dd221fb8362e936564736f6c6343000602003368747470733a2f2f657263313135356d657461646174612e617a75726577656273697465732e6e65742f6170692f746f6b656e2f7b69647d",
  "deployedBytecode": "0x6080604052600436106102075760003560e060020a90048063731133e91161011c578063b6498859116100a4578063d547741f11610073578063d547741f14610fc8578063e63ab1e914611001578063e985e9c514611016578063f242432a14611051578063f5298aca1461112957610207565b8063b649885914610f44578063c47cbb1414610f74578063ca15c87314610f89578063d539139314610fb357610207565b806391d14854116100eb57806391d1485414610d22578063a217fddf14610d5b578063a22cb46514610d70578063a8a3b13d14610dab578063b30ca4d814610e7f57610207565b8063731133e914610bbf5780638456cb5914610c8e57806385aa4cde14610ca35780639010d07c14610cd657610207565b80632f2ff15d1161019f5780634e1273f41161016e5780634e1273f41461087f5780634e135adb14610a035780635c975abb14610a2d578063600c071814610a425780636b20c45414610a7b57610207565b80632f2ff15d146107e357806336568abe1461081c5780633f4ba83a146108555780634049ffca1461086a57610207565b80631b2ef1ca116101db5780631b2ef1ca146103f75780631f7fdffa1461041a578063248a9ca3146105e55780632eb2c2d61461060f57610207565b8062fdd58e1461020c57806301ffc9a7146102575780630841a43d1461029f5780630e89341c14610358575b600080fd5b34801561021857600080fd5b506102456004803603604081101561022f57600080fd5b50600160a060020a038135169060200135611168565b60408051918252519081900360200190f35b34801561026357600080fd5b5061028b6004803603602081101561027a57600080fd5b5035600160e060020a0319166111dd565b604080519115158252519081900360200190f35b3480156102ab57600080fd5b50610356600480360360408110156102c257600080fd5b813591908101906040810160208201356401000000008111156102e457600080fd5b8201836020820111156102f657600080fd5b8035906020019184602083028401116401000000008311171561031857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506111fc945050505050565b005b34801561036457600080fd5b506103826004803603602081101561037b57600080fd5b5035611327565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103bc5781810151838201526020016103a4565b50505050905090810190601f1680156103e95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103566004803603604081101561040d57600080fd5b50803590602001356113bf565b34801561042657600080fd5b506103566004803603608081101561043d57600080fd5b600160a060020a03823516919081019060408101602082013564010000000081111561046857600080fd5b82018360208201111561047a57600080fd5b8035906020019184602083028401116401000000008311171561049c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156104ec57600080fd5b8201836020820111156104fe57600080fd5b8035906020019184602083028401116401000000008311171561052057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561057057600080fd5b82018360208201111561058257600080fd5b803590602001918460018302840111640100000000831117156105a457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611548945050505050565b3480156105f157600080fd5b506102456004803603602081101561060857600080fd5b50356115db565b34801561061b57600080fd5b50610356600480360360a081101561063257600080fd5b600160a060020a03823581169260208101359091169181019060608101604082013564010000000081111561066657600080fd5b82018360208201111561067857600080fd5b8035906020019184602083028401116401000000008311171561069a57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156106ea57600080fd5b8201836020820111156106fc57600080fd5b8035906020019184602083028401116401000000008311171561071e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561076e57600080fd5b82018360208201111561078057600080fd5b803590602001918460018302840111640100000000831117156107a257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506115f0945050505050565b3480156107ef57600080fd5b506103566004803603604081101561080657600080fd5b5080359060200135600160a060020a03166118fc565b34801561082857600080fd5b506103566004803603604081101561083f57600080fd5b5080359060200135600160a060020a0316611966565b34801561086157600080fd5b506103566119ca565b34801561087657600080fd5b50610245611a50565b34801561088b57600080fd5b506109b3600480360360408110156108a257600080fd5b8101906020810181356401000000008111156108bd57600080fd5b8201836020820111156108cf57600080fd5b803590602001918460208302840111640100000000831117156108f157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561094157600080fd5b82018360208201111561095357600080fd5b8035906020019184602083028401116401000000008311171561097557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611a56945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156109ef5781810151838201526020016109d7565b505050509050019250505060405180910390f35b348015610a0f57600080fd5b5061035660048036036020811015610a2657600080fd5b5035611bc3565b348015610a3957600080fd5b5061028b611c4f565b348015610a4e57600080fd5b5061035660048036036040811015610a6557600080fd5b5080359060200135600160a060020a0316611c59565b348015610a8757600080fd5b5061035660048036036060811015610a9e57600080fd5b600160a060020a038235169190810190604081016020820135640100000000811115610ac957600080fd5b820183602082011115610adb57600080fd5b80359060200191846020830284011164010000000083111715610afd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610b4d57600080fd5b820183602082011115610b5f57600080fd5b80359060200191846020830284011164010000000083111715610b8157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d6f945050505050565b348015610bcb57600080fd5b5061035660048036036080811015610be257600080fd5b600160a060020a038235169160208101359160408201359190810190608081016060820135640100000000811115610c1957600080fd5b820183602082011115610c2b57600080fd5b80359060200191846001830284011164010000000083111715610c4d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611de6945050505050565b348015610c9a57600080fd5b50610356611e6e565b348015610caf57600080fd5b5061024560048036036020811015610cc657600080fd5b5035600160a060020a0316611ef2565b348015610ce257600080fd5b50610d0660048036036040811015610cf957600080fd5b5080359060200135611f04565b60408051600160a060020a039092168252519081900360200190f35b348015610d2e57600080fd5b5061028b60048036036040811015610d4557600080fd5b5080359060200135600160a060020a0316611f29565b348015610d6757600080fd5b50610245611f47565b348015610d7c57600080fd5b5061035660048036036040811015610d9357600080fd5b50600160a060020a0381351690602001351515611f4c565b348015610db757600080fd5b50610dd560048036036020811015610dce57600080fd5b503561203e565b604051808681526020018060200185600160a060020a0316600160a060020a0316815260200184815260200183151515158152602001828103825286818151815260200191508051906020019080838360005b83811015610e40578181015183820152602001610e28565b50505050905090810190601f168015610e6d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b348015610e8b57600080fd5b5061035660048036036060811015610ea257600080fd5b600160a060020a038235169190810190604081016020820135640100000000811115610ecd57600080fd5b820183602082011115610edf57600080fd5b80359060200191846001830284011164010000000083111715610f0157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250612106915050565b348015610f5057600080fd5b5061035660048036036040811015610f6757600080fd5b50803590602001356122fb565b348015610f8057600080fd5b506102456123a1565b348015610f9557600080fd5b5061024560048036036020811015610fac57600080fd5b50356123a7565b348015610fbf57600080fd5b506102456123be565b348015610fd457600080fd5b5061035660048036036040811015610feb57600080fd5b5080359060200135600160a060020a03166123f3565b34801561100d57600080fd5b5061024561244f565b34801561102257600080fd5b5061028b6004803603604081101561103957600080fd5b50600160a060020a0381358116916020013516612484565b34801561105d57600080fd5b50610356600480360360a081101561107457600080fd5b600160a060020a03823581169260208101359091169160408201359160608101359181019060a0810160808201356401000000008111156110b457600080fd5b8201836020820111156110c657600080fd5b803590602001918460018302840111640100000000831117156110e857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506124b2945050505050565b34801561113557600080fd5b506103566004803603606081101561114c57600080fd5b50600160a060020a038135169060208101359060400135612689565b6000600160a060020a0383166111b25760405160e560020a62461bcd02815260040180806020018281038252602b815260200180613ab3602b913960400191505060405180910390fd5b506000818152600260209081526040808320600160a060020a03861684529091529020545b92915050565b600160e060020a03191660009081526001602052604090205460ff1690565b33600090815260096020526040902054821461124c5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613cf1602e913960400191505060405180910390fd5b60005b81518110156113225761127582828151811061126757fe5b602002602001015184611168565b61131a576112cf3383838151811061128957fe5b60200260200101518560016040518060400160405280600281526020017f30780000000000000000000000000000000000000000000000000000000000008152506124b2565b828282815181106112dc57fe5b6020026020010151600160a060020a03167f08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f560405160405180910390a35b60010161124f565b505050565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156113b35780601f10611388576101008083540402835291602001916113b3565b820191906000526020600020905b81548152906001019060200180831161139657829003601f168201915b50505050509050919050565b33600090815260096020526040902054821461140f5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613cf1602e913960400191505060405180910390fd5b60008111611467576040805160e560020a62461bcd02815260206004820152601a60248201527f4552524f523a205f416d6f756e74206d757374206265203e2030000000000000604482015290519081900360640190fd5b60075461147b90829063ffffffff61270016565b34146114d1576040805160e560020a62461bcd02815260206004820152601f60248201527f4552524f523a20546f6f206d7563682f6c6573732065746865722073656e7400604482015290519081900360640190fd5b6000828152600860209081526040808320600201548151928301909152918152600160a060020a039091169061150c9082908590859061275c565b60008381526008602052604090206003015461152e908363ffffffff61286d16565b600093845260086020526040909320600301929092555050565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902061158b906115866128ca565b611f29565b6115c95760405160e560020a62461bcd028152600401808060200182810382526038815260200180613c326038913960400191505060405180910390fd5b6115d5848484846128ce565b50505050565b60009081526020819052604090206002015490565b81518351146116335760405160e560020a62461bcd028152600401808060200182810382526028815260200180613e586028913960400191505060405180910390fd5b600160a060020a03841661167b5760405160e560020a62461bcd028152600401808060200182810382526025815260200180613bb86025913960400191505060405180910390fd5b6116836128ca565b600160a060020a031685600160a060020a031614806116ae57506116ae856116a96128ca565b612484565b6116ec5760405160e560020a62461bcd028152600401808060200182810382526032815260200180613bdd6032913960400191505060405180910390fd5b60006116f66128ca565b9050611706818787878787612b22565b60005b845181101561180c57600085828151811061172057fe5b60200260200101519050600085838151811061173857fe5b602002602001015190506117a5816040518060600160405280602a8152602001613c6a602a91396002600086815260200190815260200160002060008d600160a060020a0316600160a060020a0316815260200190815260200160002054612b309092919063ffffffff16565b6000838152600260209081526040808320600160a060020a038e811685529252808320939093558a16815220546117dc908261286d565b6000928352600260209081526040808520600160a060020a038c1686529091529092209190915550600101611709565b5084600160a060020a031686600160a060020a031682600160a060020a03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561189257818101518382015260200161187a565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156118d15781810151838201526020016118b9565b5050505090500194505050505060405180910390a46118f4818787878787612bca565b505050505050565b60008281526020819052604090206002015461191a906115866128ca565b6119585760405160e560020a62461bcd02815260040180806020018281038252602f815260200180613a84602f913960400191505060405180910390fd5b6119628282612f30565b5050565b61196e6128ca565b600160a060020a031681600160a060020a0316146119c05760405160e560020a62461bcd02815260040180806020018281038252602f815260200180613ea1602f913960400191505060405180910390fd5b6119628282612f9f565b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020611a08906115866128ca565b611a465760405160e560020a62461bcd02815260040180806020018281038252603b815260200180613d6f603b913960400191505060405180910390fd5b611a4e61300e565b565b60065481565b60608151835114611a9b5760405160e560020a62461bcd028152600401808060200182810382526029815260200180613e2f6029913960400191505060405180910390fd5b60608351604051908082528060200260200182016040528015611ac8578160200160208202803883390190505b50905060005b8451811015611bbb576000600160a060020a0316858281518110611aee57fe5b6020026020010151600160a060020a03161415611b3f5760405160e560020a62461bcd028152600401808060200182810382526031815260200180613ade6031913960400191505060405180910390fd5b60026000858381518110611b4f57fe5b602002602001015181526020019081526020016000206000868381518110611b7357fe5b6020026020010151600160a060020a0316600160a060020a0316815260200190815260200160002054828281518110611ba857fe5b6020908102919091010152600101611ace565b509392505050565b611bce600033611f29565b1515600114611c115760405160e560020a62461bcd02815260040180806020018281038252603c815260200180613cb5603c913960400191505060405180910390fd5b600781905560408051828152905133917f6d55988fd84c3eae3398916f51ca9d47bf4e053e5a444b72ee7583fc0143ebc3919081900360200190a250565b60055460ff165b90565b336000908152600960205260409020548214611ca95760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613cf1602e913960400191505060405180910390fd5b611cb38183611168565b15611cf25760405160e560020a62461bcd028152600401808060200182810382526023815260200180613de36023913960400191505060405180910390fd5b611d3533828460016040518060400160405280600281526020017f30780000000000000000000000000000000000000000000000000000000000008152506124b2565b6040518290600160a060020a038316907f08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f590600090a35050565b611d776128ca565b600160a060020a031683600160a060020a03161480611d9d5750611d9d836116a96128ca565b611ddb5760405160e560020a62461bcd028152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b6113228383836130b8565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020611e24906115866128ca565b611e625760405160e560020a62461bcd028152600401808060200182810382526038815260200180613c326038913960400191505060405180910390fd5b6115d58484848461275c565b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b019020611eac906115866128ca565b611eea5760405160e560020a62461bcd028152600401808060200182810382526039815260200180613daa6039913960400191505060405180910390fd5b611a4e61332c565b60096020526000908152604090205481565b6000828152602081905260408120611f22908363ffffffff6133bd16565b9392505050565b6000828152602081905260408120611f22908363ffffffff6133c916565b600081565b81600160a060020a0316611f5e6128ca565b600160a060020a03161415611fa75760405160e560020a62461bcd028152600401808060200182810382526029815260200180613e066029913960400191505060405180910390fd5b8060036000611fb46128ca565b600160a060020a03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611ff86128ca565b6040805184151581529051600160a060020a0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6008602090815260009182526040918290208054600180830180548651600293821615610100026000190190911692909204601f8101869004860283018601909652858252919492939092908301828280156120db5780601f106120b0576101008083540402835291602001916120db565b820191906000526020600020905b8154815290600101906020018083116120be57829003601f168201915b50505050600283015460038401546004909401549293600160a060020a039091169290915060ff1685565b612111600033611f29565b15156001146121545760405160e560020a62461bcd02815260040180806020018281038252603c815260200180613cb5603c913960400191505060405180910390fd5b600160a060020a03831661219c5760405160e560020a62461bcd028152600401808060200182810382526022815260200180613d1f6022913960400191505060405180910390fd5b600160a060020a038316600090815260096020526040902054156121f45760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613d41602e913960400191505060405180910390fd5b60065461220890600163ffffffff61286d16565b6006819055600160a060020a03841660009081526009602052604090205561222e613933565b6006548082526020808301858152600160a060020a03871660408086019190915260608501869052600160808601819052600094855260088452932084518155905180518594929361228493850192019061396d565b5060408281015160028301805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606083015160038301556080909201516004909101805460ff1916911515919091179055600654815160208101909252600082526115d591869190859061275c565b612306600033611f29565b15156001146123495760405160e560020a62461bcd02815260040180806020018281038252603c815260200180613cb5603c913960400191505060405180910390fd5b600081116114d1576040805160e560020a62461bcd02815260206004820152601a60248201527f4552524f523a205f416d6f756e74206d757374206265203e2030000000000000604482015290519081900360640190fd5b60075481565b60008181526020819052604081206111d7906133de565b604080517f4d494e5445525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902081565b600082815260208190526040902060020154612411906115866128ca565b6119c05760405160e560020a62461bcd028152600401808060200182810382526030815260200180613b886030913960400191505060405180910390fd5b604080517f5041555345525f524f4c450000000000000000000000000000000000000000008152905190819003600b01902081565b600160a060020a03918216600090815260036020908152604080832093909416825291909152205460ff1690565b600160a060020a0384166124fa5760405160e560020a62461bcd028152600401808060200182810382526025815260200180613bb86025913960400191505060405180910390fd5b6125026128ca565b600160a060020a031685600160a060020a031614806125285750612528856116a96128ca565b6125665760405160e560020a62461bcd028152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b60006125706128ca565b9050612590818787612581886133e9565b61258a886133e9565b87612b22565b6125dd836040518060600160405280602a8152602001613c6a602a91396000878152600260209081526040808320600160a060020a038d168452909152902054919063ffffffff612b3016565b6000858152600260209081526040808320600160a060020a038b81168552925280832093909355871681522054612614908461286d565b6000858152600260209081526040808320600160a060020a03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46118f481878787878761342d565b6126916128ca565b600160a060020a031683600160a060020a031614806126b757506126b7836116a96128ca565b6126f55760405160e560020a62461bcd028152600401808060200182810382526029815260200180613b5f6029913960400191505060405180910390fd5b6113228383836135df565b60008261270f575060006111d7565b8282028284828161271c57fe5b0414611f225760405160e560020a62461bcd028152600401808060200182810382526021815260200180613c946021913960400191505060405180910390fd5b600160a060020a0384166127a45760405160e560020a62461bcd028152600401808060200182810382526021815260200180613e806021913960400191505060405180910390fd5b60006127ae6128ca565b90506127c081600087612581886133e9565b6000848152600260209081526040808320600160a060020a03891684529091529020546127f3908463ffffffff61286d16565b6000858152600260209081526040808320600160a060020a03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a46128668160008787878761342d565b5050505050565b600082820183811015611f22576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b600160a060020a0384166129165760405160e560020a62461bcd028152600401808060200182810382526021815260200180613e806021913960400191505060405180910390fd5b81518351146129595760405160e560020a62461bcd028152600401808060200182810382526028815260200180613e586028913960400191505060405180910390fd5b60006129636128ca565b905061297481600087878787612b22565b60005b8451811015612a38576129ef6002600087848151811061299357fe5b60200260200101518152602001908152602001600020600088600160a060020a0316600160a060020a03168152602001908152602001600020548583815181106129d957fe5b602002602001015161286d90919063ffffffff16565b600260008784815181106129ff57fe5b60209081029190910181015182528181019290925260409081016000908120600160a060020a038b168252909252902055600101612977565b5084600160a060020a03166000600160a060020a031682600160a060020a03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015612abf578181015183820152602001612aa7565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015612afe578181015183820152602001612ae6565b5050505090500194505050505060405180910390a461286681600087878787612bca565b6118f486868686868661371b565b60008184841115612bc25760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b87578181015183820152602001612b6f565b50505050905090810190601f168015612bb45780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b612bdc84600160a060020a0316613770565b156118f45783600160a060020a031663bc197c8187878686866040518663ffffffff1660e060020a0281526004018086600160a060020a0316600160a060020a0316815260200185600160a060020a0316600160a060020a03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015612c7f578181015183820152602001612c67565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015612cbe578181015183820152602001612ca6565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015612cfa578181015183820152602001612ce2565b50505050905090810190601f168015612d275780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015612d4c57600080fd5b505af1925050508015612d7157506040513d6020811015612d6c57600080fd5b505160015b612ebc576040516000815260443d1015612d8d57506000612e2d565b60046000803e60e060020a600051046308c379a08114612db1576000915050612e2d565b60043d036004833e81513d602482011167ffffffffffffffff82111715612ddd57600092505050612e2d565b808301805167ffffffffffffffff811115612dff576000945050505050612e2d565b8060208301013d8601811115612e1d57600095505050505050612e2d565b601f01601f191660405250925050505b80612e385750612e82565b60405160e560020a62461bcd028152602060048201818152835160248401528351849391928392604401919085019080838360008315612b87578181015183820152602001612b6f565b60405160e560020a62461bcd028152600401808060200182810382526034815260200180613a066034913960400191505060405180910390fd5b600160e060020a031981167fbc197c810000000000000000000000000000000000000000000000000000000014612f275760405160e560020a62461bcd028152600401808060200182810382526028815260200180613a5c6028913960400191505060405180910390fd5b50505050505050565b6000828152602081905260409020612f4e908263ffffffff61377616565b1561196257612f5b6128ca565b600160a060020a031681600160a060020a0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081905260409020612fbd908263ffffffff61378b16565b1561196257612fca6128ca565b600160a060020a031681600160a060020a0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60055460ff16613068576040805160e560020a62461bcd02815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61309b6128ca565b60408051600160a060020a039092168252519081900360200190a1565b600160a060020a0383166131005760405160e560020a62461bcd028152600401808060200182810382526023815260200180613c0f6023913960400191505060405180910390fd5b80518251146131435760405160e560020a62461bcd028152600401808060200182810382526028815260200180613e586028913960400191505060405180910390fd5b600061314d6128ca565b905061316d81856000868660405180602001604052806000815250612b22565b60005b835181101561324b5761320283828151811061318857fe5b6020026020010151604051806060016040528060248152602001613b0f60249139600260008886815181106131b957fe5b60200260200101518152602001908152602001600020600089600160a060020a0316600160a060020a0316815260200190815260200160002054612b309092919063ffffffff16565b6002600086848151811061321257fe5b60209081029190910181015182528181019290925260409081016000908120600160a060020a038a168252909252902055600101613170565b506000600160a060020a031684600160a060020a031682600160a060020a03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156132d25781810151838201526020016132ba565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156133115781810151838201526020016132f9565b5050505090500194505050505060405180910390a450505050565b60055460ff1615613387576040805160e560020a62461bcd02815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861309b6128ca565b6000611f2283836137a0565b6000611f2283600160a060020a038416613807565b60006111d78261381f565b60408051600180825281830190925260609182919060208083019080388339019050509050828160008151811061341c57fe5b602090810291909101015292915050565b61343f84600160a060020a0316613770565b156118f45783600160a060020a031663f23a6e6187878686866040518663ffffffff1660e060020a0281526004018086600160a060020a0316600160a060020a0316815260200185600160a060020a0316600160a060020a0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156134e35781810151838201526020016134cb565b50505050905090810190601f1680156135105780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561353357600080fd5b505af192505050801561355857506040513d602081101561355357600080fd5b505160015b613574576040516000815260443d1015612d8d57506000612e2d565b600160e060020a031981167ff23a6e610000000000000000000000000000000000000000000000000000000014612f275760405160e560020a62461bcd028152600401808060200182810382526028815260200180613a5c6028913960400191505060405180910390fd5b600160a060020a0383166136275760405160e560020a62461bcd028152600401808060200182810382526023815260200180613c0f6023913960400191505060405180910390fd5b60006136316128ca565b905061366181856000613643876133e9565b61364c876133e9565b60405180602001604052806000815250612b22565b6136ae82604051806060016040528060248152602001613b0f602491396000868152600260209081526040808320600160a060020a038b168452909152902054919063ffffffff612b3016565b6000848152600260209081526040808320600160a060020a03808a16808652918452828520959095558151888152928301879052815193949093908616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a450505050565b6137298686868686866118f4565b613731611c4f565b156118f45760405160e560020a62461bcd02815260040180806020018281038252602c815260200180613b33602c913960400191505060405180910390fd5b3b151590565b6000611f2283600160a060020a038416613823565b6000611f2283600160a060020a03841661386d565b815460009082106137e55760405160e560020a62461bcd028152600401808060200182810382526022815260200180613a3a6022913960400191505060405180910390fd5b8260000182815481106137f457fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600061382f8383613807565b613865575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556111d7565b5060006111d7565b6000818152600183016020526040812054801561392957835460001980830191908101906000908790839081106138a057fe5b90600052602060002001549050808760000184815481106138bd57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806138ed57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506111d7565b60009150506111d7565b6040518060a0016040528060008152602001606081526020016000600160a060020a03168152602001600081526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106139ae57805160ff19168380011785556139db565b828001600101855582156139db579182015b828111156139db5782518255916020019190600101906139c0565b506139e79291506139eb565b5090565b611c5691905b808211156139e757600081556001016139f156fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c654552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d214552524f523a205f457363617065726f6f6d41646d696e20697320696e76616c69644552524f523a205573657220616c72656164792068617320616e2065736361706520726f6f6d206163636f756e74455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f2070617573654552524f523a20557365722068617320636f6c6c65637461626c6520616c7265616479455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122046af4f09dc2b95e350fba2e90ac63f535825b5ec164400a2dd221fb8362e936564736f6c63430006020033",
  "sourceMap": "482:7917:0:-:0;;;939:1;904:36;;1141:5;1104:42;;2697:140;8:9:-1;5:2;;;30:1;27;20:12;5:2;2697:140:0;1205:207:7;;;;;;;;;;;;;;;;;1251:3;751:40:4;770:20;751:18;;;;:40;:::i;:::-;2015:12:8;2023:3;2015:7;;;;:12;:::i;:::-;2116:41;2135:21;2116:18;;;;:41;:::i;:::-;2257:54;2276:34;2257:18;;;;:54;:::i;:::-;-1:-1:-1;923:7:16;:15;;-1:-1:-1;;923:15:16;;;1266:44:7::1;933:5:16::0;1297:12:7::1;:10;;::::0;::::1;:12;:::i;:::-;1266:10;;::::0;::::1;:44;:::i;:::-;967:24;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;1321:37:::1;::::0;1345:12:::1;:10;;::::0;::::1;:12;:::i;1321:37::-;1035:24;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;1368:37:::1;::::0;1392:12:::1;:10;;::::0;::::1;:12;:::i;1368:37::-;1205:207:::0;482:7917:0;;1482:198:4;1565:25;;;;;;1557:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1633:33;;;;;;1669:4;1633:33;;;;;;;;:40;;-1:-1:-1;;1633:40:4;;;;;;1482:198::o;7590:86:8:-;7656:13;;;;:4;;:13;;;;;:::i;:::-;;7590:86;:::o;590:104:2:-;677:10;590:104;;:::o;6578:110:3:-;6656:25;6667:4;6673:7;6656:10;;;;:25;:::i;7015:184::-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:24;;;;;;:33;:::i;:::-;7084:109;;;7169:12;:10;;;;:12;:::i;:::-;-1:-1:-1;;;;;7142:40:3;7160:7;-1:-1:-1;;;;;7142:40:3;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4864:141:15:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:15;;4957:4;;;;:41;:::i;:::-;4950:48;;4864:141;;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;;;;:21;:::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:15;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:15;1986:12;;3776:127;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;482:7917:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;482:7917:0;;;-1:-1:-1;482:7917:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "482:7917:0:-:0;;;;;;;;;;-1:-1:-1;;;482:7917:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:220:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2956:220:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2956:220:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;948:140:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:140:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;948:140:4;-1:-1:-1;;;;;;948:140:4;;:::i;:::-;;;;;;;;;;;;;;;;;;5438:558:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5438:558:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5438:558:0;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5438:558:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5438:558:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5438:558:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5438:558:0;;-1:-1:-1;5438:558:0;;-1:-1:-1;;;;;5438:558:0:i;:::-;;2717:97:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2717:97:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2717:97:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2717:97:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6307:539:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6307:539:0;;;;;;;:::i;1971:278:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1971:278:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1971:278:7;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1971:278:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1971:278:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1971:278:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1971:278:7;;;;;;;;-1:-1:-1;1971:278:7;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;1971:278:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1971:278:7;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1971:278:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1971:278:7;;;;;;;;-1:-1:-1;1971:278:7;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;1971:278:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1971:278:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1971:278:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1971:278:7;;-1:-1:-1;1971:278:7;;-1:-1:-1;;;;;1971:278:7:i;4272:112:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4272:112:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4272:112:3;;:::i;5583:1184:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5583:1184:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;5583:1184:8;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5583:1184:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5583:1184:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5583:1184:8;;;;;;;;-1:-1:-1;5583:1184:8;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;5583:1184:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5583:1184:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5583:1184:8;;;;;;;;-1:-1:-1;5583:1184:8;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;5583:1184:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5583:1184:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5583:1184:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5583:1184:8;;-1:-1:-1;5583:1184:8;;-1:-1:-1;;;;;5583:1184:8:i;4634:223:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4634:223:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4634:223:3;;;;;;-1:-1:-1;;;;;4634:223:3;;:::i;5808:205::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5808:205:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5808:205:3;;;;;;-1:-1:-1;;;;;5808:205:3;;:::i;2834:177:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2834:177:7;;;:::i;904:36:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;904:36:0;;;:::i;3333:615:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3333:615:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3333:615:8;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3333:615:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3333:615:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3333:615:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3333:615:8;;;;;;;;-1:-1:-1;3333:615:8;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;3333:615:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3333:615:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3333:615:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3333:615:8;;-1:-1:-1;3333:615:8;;-1:-1:-1;;;;;3333:615:8:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3333:615:8;;;;;;;;;;;;;;;;;7958:436:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7958:436:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7958:436:0;;:::i;1040:76:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1040:76:16;;;:::i;4667:389:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4667:389:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4667:389:0;;;;;;-1:-1:-1;;;;;4667:389:0;;:::i;598:312:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;598:312:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;598:312:9;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;598:312:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;598:312:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;598:312:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;598:312:9;;;;;;;;-1:-1:-1;598:312:9;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;598:312:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;598:312:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;598:312:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;598:312:9;;-1:-1:-1;598:312:9;;-1:-1:-1;;;;;598:312:9:i;1623:246:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1623:246:7;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1623:246:7;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;1623:246:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1623:246:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1623:246:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1623:246:7;;-1:-1:-1;1623:246:7;;-1:-1:-1;;;;;1623:246:7:i;2454:171::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2454:171:7;;;:::i;1741:48:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1741:48:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1741:48:0;-1:-1:-1;;;;;1741:48:0;;:::i;3955:136:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3955:136:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3955:136:3;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3955:136:3;;;;;;;;;;;;;;2940:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2940:137:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2940:137:3;;;;;;-1:-1:-1;;;;;2940:137:3;;:::i;1717:49::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1717:49:3;;;:::i;4016:306:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4016:306:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4016:306:8;;;;;;;;;;:::i;1401:48:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1401:48:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1401:48:0;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1401:48:0;-1:-1:-1;;;;;1401:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1401:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3280:1071;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3280:1071:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;3280:1071:0;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3280:1071:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3280:1071:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3280:1071:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3280:1071:0;;-1:-1:-1;;3280:1071:0;;;-1:-1:-1;3280:1071:0;;-1:-1:-1;;3280:1071:0:i;7159:459::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7159:459:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7159:459:0;;;;;;;:::i;1104:42::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:42:0;;;:::i;3245:125:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3245:125:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3245:125:3;;:::i;929:62:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;929:62:7;;;:::i;5091:226:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5091:226:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5091:226:3;;;;;;-1:-1:-1;;;;;5091:226:3;;:::i;997:62:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;997:62:7;;;:::i;4389:158:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4389:158:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4389:158:8;;;;;;;;;;:::i;4614:897::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4614:897:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;4614:897:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4614:897:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4614:897:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4614:897:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4614:897:8;;-1:-1:-1;4614:897:8;;-1:-1:-1;;;;;4614:897:8:i;312:280:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;312:280:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;312:280:9;;;;;;;;;;;;;:::i;2956:220:8:-;3034:7;-1:-1:-1;;;;;3061:21:8;;3053:77;;;;-1:-1:-1;;;;;3053:77:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3147:13:8;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3147:22:8;;;;;;;;;;2956:220;;;;;:::o;948:140:4:-;-1:-1:-1;;;;;;1048:33:4;1025:4;1048:33;;;:20;:33;;;;;;;;;948:140::o;5438:558:0:-;5547:10;5530:28;;;;:16;:28;;;;;;:35;;5522:94;;;;-1:-1:-1;;;;;5522:94:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5634:9;5629:360;5653:9;:16;5649:1;:20;5629:360;;;5765:28;5775:9;5785:1;5775:12;;;;;;;;;;;;;;5789:3;5765:9;:28::i;:::-;5761:217;;5819:52;5836:10;5847:9;5857:1;5847:12;;;;;;;;;;;;;;5860:3;5864:1;5819:52;;;;;;;;;;;;;;;;;:16;:52::i;:::-;5958:3;5944:9;5954:1;5944:12;;;;;;;;;;;;;;-1:-1:-1;;;;;5928:34:0;;;;;;;;;;;5761:217;5671:3;;5629:360;;;;5438:558;;:::o;2717:97:8:-;2803:4;2796:11;;;;;;;;-1:-1:-1;;2796:11:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:13;;2796:11;;2803:4;;2796:11;;2803:4;2796:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:97;;;:::o;6307:539:0:-;6396:10;6379:28;;;;:16;:28;;;;;;:35;;6371:94;;;;-1:-1:-1;;;;;6371:94:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6494:1;6484:7;:11;6476:50;;;;;-1:-1:-1;;;;;6476:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6571:19;;6559:32;;:7;;:32;:11;:32;:::i;:::-;6545:9;:47;6537:91;;;;;-1:-1:-1;;;;;6537:91:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6641:23;6667:16;;;:11;:16;;;;;;;;:23;;;6701:40;;;;;;;;;;;-1:-1:-1;;;;;6667:23:0;;;;6701:40;;6667:23;;6679:3;;6729:7;;6701:5;:40::i;:::-;6790:16;;;;:11;:16;;;;;:35;;;:48;;6830:7;6790:48;:39;:48;:::i;:::-;6752:16;;;;:11;:16;;;;;;:35;;:86;;;;-1:-1:-1;;6307:539:0:o;1971:278:7:-;967:24;;;;;;;;;;;;;;;;2102:34;;2123:12;:10;:12::i;:::-;2102:7;:34::i;:::-;2094:103;;;;-1:-1:-1;;;;;2094:103:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:34;2219:2;2223:3;2228:7;2237:4;2208:10;:34::i;:::-;1971:278;;;;:::o;4272:112:3:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;5583:1184:8:-;5837:7;:14;5823:3;:10;:28;5815:81;;;;-1:-1:-1;;;;;5815:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:16:8;;5906:66;;;;-1:-1:-1;;;;;5906:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6011:12;:10;:12::i;:::-;-1:-1:-1;;;;;6003:20:8;:4;-1:-1:-1;;;;;6003:20:8;;:60;;;;6027:36;6044:4;6050:12;:10;:12::i;:::-;6027:16;:36::i;:::-;5982:157;;;;-1:-1:-1;;;;;5982:157:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:16;6169:12;:10;:12::i;:::-;6150:31;;6192:60;6213:8;6223:4;6229:2;6233:3;6238:7;6247:4;6192:20;:60::i;:::-;6268:9;6263:349;6287:3;:10;6283:1;:14;6263:349;;;6318:10;6331:3;6335:1;6331:6;;;;;;;;;;;;;;6318:19;;6351:14;6368:7;6376:1;6368:10;;;;;;;;;;;;;;6351:27;;6415:123;6456:6;6415:123;;;;;;;;;;;;;;;;;:9;:13;6425:2;6415:13;;;;;;;;;;;:19;6429:4;-1:-1:-1;;;;;6415:19:8;-1:-1:-1;;;;;6415:19:8;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6393:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6393:19:8;;;;;;;;;;:145;;;;6572:17;;;;;;:29;;6594:6;6572:21;:29::i;:::-;6552:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6552:17:8;;;;;;;;;;:49;;;;-1:-1:-1;6299:3:8;;6263:349;;;;6657:2;-1:-1:-1;;;;;6627:47:8;6651:4;-1:-1:-1;;;;;6627:47:8;6641:8;-1:-1:-1;;;;;6627:47:8;;6661:3;6666:7;6627:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6627:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6627:47:8;;;;;;;;;;;;;;;;;;;6685:75;6721:8;6731:4;6737:2;6741:3;6746:7;6755:4;6685:35;:75::i;:::-;5583:1184;;;;;;:::o;4634:223:3:-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;4717:45::-;4709:105;;;;-1:-1:-1;;;;;4709:105:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;5808:205::-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:3;:7;-1:-1:-1;;;;;5894:23:3;;5886:83;;;;-1:-1:-1;;;;;5886:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;2834:177:7:-;1035:24;;;;;;;;;;;;;;;;2886:34;;2907:12;:10;:12::i;2886:34::-;2878:106;;;;-1:-1:-1;;;;;2878:106:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2994:10;:8;:10::i;:::-;2834:177::o;904:36:0:-;;;;:::o;3333:615:8:-;3490:16;3549:3;:10;3530:8;:15;:29;3522:83;;;;-1:-1:-1;;;;;3522:83:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:30;3663:8;:15;3649:30;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;3649:30:8;-1:-1:-1;3616:63:8;-1:-1:-1;3695:9:8;3690:221;3714:8;:15;3710:1;:19;3690:221;;;3781:1;-1:-1:-1;;;;;3758:25:8;:8;3767:1;3758:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3758:25:8;;;3750:87;;;;-1:-1:-1;;;;;3750:87:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:9;:17;3880:3;3884:1;3880:6;;;;;;;;;;;;;;3870:17;;;;;;;;;;;:30;3888:8;3897:1;3888:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3870:30:8;-1:-1:-1;;;;;3870:30:8;;;;;;;;;;;;;3851:13;3865:1;3851:16;;;;;;;;;;;;;;;;;:49;3731:3;;3690:221;;;-1:-1:-1;3928:13:8;3333:615;-1:-1:-1;;;3333:615:8:o;7958:436:0:-;8046:38;1762:4:3;8073:10:0;8046:7;:38::i;:::-;:46;;8088:4;8046:46;8038:119;;;;-1:-1:-1;;;;;8038:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8262:19;:45;;;8323:63;;;;;;;;8350:10;;8323:63;;;;;;;;;;7958:436;:::o;1040:76:16:-;1102:7;;;;1040:76;;:::o;4667:389:0:-;4761:10;4744:28;;;;:16;:28;;;;;;:35;;4736:94;;;;-1:-1:-1;;;;;4736:94:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4849:24;4859:8;4869:3;4849:9;:24::i;:::-;:29;4841:77;;;;-1:-1:-1;;;;;4841:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4929:48;4946:10;4957:8;4966:3;4970:1;4929:48;;;;;;;;;;;;;;;;;:16;:48::i;:::-;5018:30;;5044:3;;-1:-1:-1;;;;;5018:30:0;;;;;;;;4667:389;;:::o;598:312:9:-;738:12;:10;:12::i;:::-;-1:-1:-1;;;;;727:23:9;:7;-1:-1:-1;;;;;727:23:9;;:66;;;;754:39;771:7;780:12;:10;:12::i;754:39::-;706:154;;;;-1:-1:-1;;;;;706:154:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:32;882:7;891:3;896:6;871:10;:32::i;1623:246:7:-;967:24;;;;;;;;;;;;;;;;1729:34;;1750:12;:10;:12::i;1729:34::-;1721:103;;;;-1:-1:-1;;;;;1721:103:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:27;1841:2;1845;1849:6;1857:4;1835:5;:27::i;2454:171::-;1035:24;;;;;;;;;;;;;;;;2504:34;;2525:12;:10;:12::i;2504:34::-;2496:104;;;;-1:-1:-1;;;;;2496:104:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:8;:6;:8::i;1741:48:0:-;;;;;;;;;;;;;:::o;3955:136:3:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:30;:23;:30;:::i;:::-;4047:37;3955:136;-1:-1:-1;;;3955:136:3:o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:38;:29;:38;:::i;1717:49::-;1762:4;1717:49;:::o;4016:306:8:-;4134:8;-1:-1:-1;;;;;4118:24:8;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4118:24:8;;;4110:78;;;;-1:-1:-1;;;;;4110:78:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:8;4199:18;:32;4218:12;:10;:12::i;:::-;-1:-1:-1;;;;;4199:32:8;;;;;;;;;;;;;;;;;-1:-1:-1;4199:32:8;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4199:53:8;;;;;;;;;;;4282:12;:10;:12::i;:::-;4267:48;;;;;;;;;;-1:-1:-1;;;;;4267:48:8;;;;;;;;;;;;;;4016:306;;:::o;1401:48:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1401:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1401:48:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;1401:48:0;;;;;;-1:-1:-1;1401:48:0;;;:::o;3280:1071::-;3406:38;1762:4:3;3433:10:0;3406:7;:38::i;:::-;:46;;3448:4;3406:46;3398:119;;;;-1:-1:-1;;;;;3398:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3619:30:0;;3611:77;;;;-1:-1:-1;;;;;3611:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3707:34:0;;;;;;:16;:34;;;;;;:39;3699:98;;;;-1:-1:-1;;;;;3699:98:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3830:17;;:24;;3852:1;3830:24;:21;:24;:::i;:::-;3810:17;:44;;;-1:-1:-1;;;;;3867:34:0;;;;;;:16;:34;;;;;:54;3934:33;;:::i;:::-;3998:17;;3978:37;;;4026:19;;;;:27;;;-1:-1:-1;;;;;4064:39:0;;:20;;;;:39;;;;4114:32;;;:52;;;4202:4;4177:22;;;:29;;;3978:17;4219:30;;;:11;:30;;;;:46;;;;;;;;3978:13;;4219:30;;:46;;;;;;;;:::i;:::-;-1:-1:-1;4219:46:0;;;;;;;;;;-1:-1:-1;;4219:46:0;-1:-1:-1;;;;;4219:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4219:46:0;;;;;;;;;;4300:17;;4276:65;;;;;;;;-1:-1:-1;4276:65:0;;;;4282:16;;4300:17;4319;;4276:5;:65::i;7159:459::-;7228:38;1762:4:3;7255:10:0;7228:7;:38::i;:::-;:46;;7270:4;7228:46;7220:119;;;;-1:-1:-1;;;;;7220:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7368:1;7358:7;:11;7350:50;;;;;-1:-1:-1;;;;;7350:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:42;;;;:::o;3245:125:3:-;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;929:62:7:-;967:24;;;;;;;;;;;;;;;;929:62;:::o;5091:226:3:-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;;;5167:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:62:7;1035:24;;;;;;;;;;;;;;;;997:62;:::o;4389:158:8:-;-1:-1:-1;;;;;4503:27:8;;;4480:4;4503:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4389:158::o;4614:897::-;-1:-1:-1;;;;;4829:16:8;;4821:66;;;;-1:-1:-1;;;;;4821:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:12;:10;:12::i;:::-;-1:-1:-1;;;;;4918:20:8;:4;-1:-1:-1;;;;;4918:20:8;;:60;;;;4942:36;4959:4;4965:12;:10;:12::i;4942:36::-;4897:148;;;;-1:-1:-1;;;;;4897:148:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:16;5075:12;:10;:12::i;:::-;5056:31;;5098:96;5119:8;5129:4;5135:2;5139:21;5157:2;5139:17;:21::i;:::-;5162:25;5180:6;5162:17;:25::i;:::-;5189:4;5098:20;:96::i;:::-;5227:77;5251:6;5227:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5227:19:8;;;;;;;;;;;:77;;:23;:77;:::i;:::-;5205:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5205:19:8;;;;;;;;;;:99;;;;5334:17;;;;;;:29;;5356:6;5334:21;:29::i;:::-;5314:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5314:17:8;;;;;;;;;;;;;:49;;;;5379:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5436:68;5467:8;5477:4;5483:2;5487;5491:6;5499:4;5436:30;:68::i;312:280:9:-;427:12;:10;:12::i;:::-;-1:-1:-1;;;;;416:23:9;:7;-1:-1:-1;;;;;416:23:9;;:66;;;;443:39;460:7;469:12;:10;:12::i;443:39::-;395:154;;;;-1:-1:-1;;;;;395:154:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:25;566:7;575:2;579:5;560;:25::i;2180:459:6:-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:6;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;;;2557:56:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8059:572:8;-1:-1:-1;;;;;8173:21:8;;8165:67;;;;-1:-1:-1;;;;;8165:67:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8243:16;8262:12;:10;:12::i;:::-;8243:31;;8285:107;8306:8;8324:1;8328:7;8337:21;8355:2;8337:17;:21::i;8285:107::-;8428:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8428:22:8;;;;;;;;;;:34;;8455:6;8428:34;:26;:34;:::i;:::-;8403:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8403:22:8;;;;;;;;;;;;:59;;;;8477:57;;;;;;;;;;;;;8403:22;;8477:57;;;;;;;;;;;;8545:79;8576:8;8594:1;8598:7;8607:2;8611:6;8619:4;8545:30;:79::i;:::-;8059:572;;;;;:::o;874:176:6:-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;;;978:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;590:104:2;677:10;590:104;:::o;8976:700:8:-;-1:-1:-1;;;;;9110:16:8;;9102:62;;;;-1:-1:-1;;;;;9102:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9196:7;:14;9182:3;:10;:28;9174:81;;;;-1:-1:-1;;;;;9174:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9266:16;9285:12;:10;:12::i;:::-;9266:31;;9308:66;9329:8;9347:1;9351:2;9355:3;9360:7;9369:4;9308:20;:66::i;:::-;9390:6;9385:124;9406:3;:10;9402:1;:14;9385:124;;;9461:37;9476:9;:17;9486:3;9490:1;9486:6;;;;;;;;;;;;;;9476:17;;;;;;;;;;;:21;9494:2;-1:-1:-1;;;;;9476:21:8;-1:-1:-1;;;;;9476:21:8;;;;;;;;;;;;;9461:7;9469:1;9461:10;;;;;;;;;;;;;;:14;;:37;;;;:::i;:::-;9437:9;:17;9447:3;9451:1;9447:6;;;;;;;;;;;;;;;;;;;9437:17;;;;;;;;;;;;;-1:-1:-1;9437:17:8;;;-1:-1:-1;;;;;9437:21:8;;;;;;;;;:61;9418:3;;9385:124;;;;9560:2;-1:-1:-1;;;;;9524:53:8;9556:1;-1:-1:-1;;;;;9524:53:8;9538:8;-1:-1:-1;;;;;9524:53:8;;9564:3;9569:7;9524:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9524:53:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9524:53:8;;;;;;;;;;;;;;;;;;;9588:81;9624:8;9642:1;9646:2;9650:3;9655:7;9664:4;9588:35;:81::i;3017:342:7:-;3286:66;3313:8;3323:4;3329:2;3333:3;3338:7;3347:4;3286:26;:66::i;1746:187:6:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;;;1851:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1851:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:6;;;1746:187::o;13276:778:8:-;13520:15;:2;-1:-1:-1;;;;;13520:13:8;;:15::i;:::-;13516:532;;;13572:2;-1:-1:-1;;;;;13555:43:8;;13599:8;13609:4;13615:3;13620:7;13629:4;13555:79;;;;;-1:-1:-1;;;13555:79:8;;;;;;;-1:-1:-1;;;;;13555:79:8;-1:-1:-1;;;;;13555:79:8;;;;;;-1:-1:-1;;;;;13555:79:8;-1:-1:-1;;;;;13555:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13555:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13555:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13555:79:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13555:79:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13555:79:8;;;13551:487;;20:4:-1;14:11;13551:487:8;30:15:-1;;93:4;75:16;72:26;69:2;;;-1:-1;109:1;111:5;;69:2;145:1;142;139;124:23;-1:-1;;;174:1;168:8;164:83;271:10;266:3;263:19;253:2;;294:1;286:9;;296:5;;;253:2;355:1;337:16;333:24;330:1;324:4;309:49;384:4;378:11;468:16;461:4;453:6;449:17;446:39;419:18;411:6;408:30;398:94;395:2;;;509:1;501:9;;517:5;;;;395:2;556:6;550:4;546:17;589:3;583:10;613:18;605:6;602:30;599:2;;;643:1;635:9;;645:5;;;;;;599:2;689:6;682:4;677:3;673:14;669:27;723:16;717:4;713:27;708:3;705:36;702:2;;;752:1;744:9;;754:5;;;;;;;702:2;804:4;784:14;-1:-1;;780:30;774:4;767:44;-1:-1;825:3;-1:-1;;;50:795;13551:487:8;;;;;;;13907:14;;-1:-1:-1;;;;;13907:14:8;;;;;;;;;;;;;;;;;13914:6;;13907:14;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;13551:487:8;13961:62;;-1:-1:-1;;;;;13961:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;-1:-1:-1;;;;;;13683:64:8;;13695:52;13683:64;13679:161;;13771:50;;-1:-1:-1;;;;;13771:50:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13679:161;13635:219;13276:778;;;;;;:::o;7015:184:3:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:33;:24;:33;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:3;7160:7;-1:-1:-1;;;;;7142:40:3;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:36;:27;:36;:::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:3;7354:7;-1:-1:-1;;;;;7336:40:3;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;2042:117:16:-;1610:7;;;;1602:40;;;;;-1:-1:-1;;;;;1602:40:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2100:7:::1;:15:::0;;-1:-1:-1;;2100:15:16::1;::::0;;2130:22:::1;2139:12;:10;:12::i;:::-;2130:22;::::0;;-1:-1:-1;;;;;2130:22:16;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2042:117::o:0;10657:705:8:-;-1:-1:-1;;;;;10777:21:8;;10769:69;;;;-1:-1:-1;;;;;10769:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10870:7;:14;10856:3;:10;:28;10848:81;;;;-1:-1:-1;;;;;10848:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10940:16;10959:12;:10;:12::i;:::-;10940:31;;10982:69;11003:8;11013:7;11030:1;11034:3;11039:7;10982:69;;;;;;;;;;;;:20;:69::i;:::-;11067:6;11062:220;11083:3;:10;11079:1;:14;11062:220;;;11143:128;11191:7;11199:1;11191:10;;;;;;;;;;;;;;11143:128;;;;;;;;;;;;;;;;;:9;:17;11153:3;11157:1;11153:6;;;;;;;;;;;;;;11143:17;;;;;;;;;;;:26;11161:7;-1:-1:-1;;;;;11143:26:8;-1:-1:-1;;;;;11143:26:8;;;;;;;;;;;;;:30;;:128;;;;;:::i;:::-;11114:9;:17;11124:3;11128:1;11124:6;;;;;;;;;;;;;;;;;;;11114:17;;;;;;;;;;;;;-1:-1:-1;11114:17:8;;;-1:-1:-1;;;;;11114:26:8;;;;;;;;;:157;11095:3;;11062:220;;;;11338:1;-1:-1:-1;;;;;11297:58:8;11321:7;-1:-1:-1;;;;;11297:58:8;11311:8;-1:-1:-1;;;;;11297:58:8;;11342:3;11347:7;11297:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11297:58:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11297:58:8;;;;;;;;;;;;;;;;;;;10657:705;;;;:::o;1795:115:16:-;1346:7;;;;1345:8;1337:37;;;;;-1:-1:-1;;;;;1337:37:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:7:::1;:14:::0;;-1:-1:-1;;1854:14:16::1;1864:4;1854:14;::::0;;1883:20:::1;1890:12;:10;:12::i;6085:147:15:-:0;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:15;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;14060:193:8:-;14179:16;;;14193:1;14179:16;;;;;;;;;14126;;;;14179;;;;;;;105:10:-1;14179:16:8;88:34:-1;136:17;;-1:-1;14179:16:8;14154:41;;14216:7;14205:5;14211:1;14205:8;;;;;;;;;;;;;;;;;:18;14241:5;14060:193;-1:-1:-1;;14060:193:8:o;12529:741::-;12748:15;:2;-1:-1:-1;;;;;12748:13:8;;:15::i;:::-;12744:520;;;12800:2;-1:-1:-1;;;;;12783:38:8;;12822:8;12832:4;12838:2;12842:6;12850:4;12783:72;;;;;-1:-1:-1;;;12783:72:8;;;;;;;-1:-1:-1;;;;;12783:72:8;-1:-1:-1;;;;;12783:72:8;;;;;;-1:-1:-1;;;;;12783:72:8;-1:-1:-1;;;;;12783:72:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12783:72:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12783:72:8;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12783:72:8;;;12779:475;;20:4:-1;14:11;12779:475:8;30:15:-1;;93:4;75:16;72:26;69:2;;;-1:-1;109:1;111:5;;12779:475:8;-1:-1:-1;;;;;;12904:59:8;;12916:47;12904:59;12900:156;;12987:50;;-1:-1:-1;;;;;12987:50:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9925:538;-1:-1:-1;;;;;10020:21:8;;10012:69;;;;-1:-1:-1;;;;;10012:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10092:16;10111:12;:10;:12::i;:::-;10092:31;;10134:105;10155:8;10165:7;10182:1;10186:21;10204:2;10186:17;:21::i;:::-;10209:25;10227:6;10209:17;:25::i;:::-;10134:105;;;;;;;;;;;;:20;:105::i;:::-;10275:108;10315:6;10275:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10275:22:8;;;;;;;;;;;:108;;:26;:108;:::i;:::-;10250:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10250:22:8;;;;;;;;;;;;:133;;;;10399:57;;;;;;;;;;;;;10250:13;;:22;;10399:57;;;;;;;;;;;;;9925:538;;;;:::o;622:393:10:-;865:66;892:8;902:4;908:2;912:3;917:7;926:4;865:26;:66::i;:::-;951:8;:6;:8::i;:::-;950:9;942:66;;;;-1:-1:-1;;;;;942:66:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413:14;1078:20;1116:8;;;718:413::o;4864:141:15:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:15;;4957:4;:41::i;5173:147::-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:15;;5269:7;:44::i;4423:201::-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:15;;;;-1:-1:-1;;;;;4509:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1732:11:15;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:15;1986:12;;2183:1512;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:15;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;482:7917:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;482:7917:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;482:7917:0;;;-1:-1:-1;482:7917:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.0;\r\n\r\nimport \"@openzeppelin/contracts/presets/ERC1155PresetMinterPauser.sol\";\r\n\r\n/// @title A contract for collecting NFT as a reward for completing an Escape Room\r\n/// @author Arnoud Commandeur\r\n/// @notice At the moment 1 address is only able to have 1 type of NFT, in futere 1 address should be able to handle multiple NFT's (rooms to reward) \r\n/// @dev Contract based on OpenZeppelin ERC1155PresetMinterPauser.sol contract\r\ncontract Collectables is ERC1155PresetMinterPauser {\r\n\r\n    // Struct for escaperooms\r\n    struct s_Escaperoom {\r\n        uint _Id;\r\n        string _Name;\r\n        address _Admin;\r\n        uint _TotalCollectables;\r\n        bool _enabled;\r\n    }\r\n\r\n    /// @notice Number of Escape Rooms \r\n    /// @dev Only increase value, do not decrease value\r\n    /// @return Number of Escape Rooms which make use of this contract\r\n    uint256 public EscapeRoomCounter = 0;\r\n\r\n    /// @notice Price that an Escape Room holder must pay to the contract per token\r\n    /// @dev Price must be >= 0\r\n    /// @return The price per token\r\n    uint256 public PricePerCollectable = 0 wei;\r\n\r\n    /// @notice A mapping between de ID of an Escape Room and the details about the Escape Room\r\n    /// @dev The struct could be removed to save gas, data could be stored off line / IPFS\r\n    /// @return A struct about 1 particular Escape Room\r\n    mapping(uint => s_Escaperoom) public Escaperooms;\r\n\r\n\r\n    /// @notice A mapping between an Escape Room holder address and the ID of the Escape Room\r\n    /// @dev An address/admin can only have one Escape Room, should be changed to handle more than 1 Escape Room\r\n    /// @return The ID of the Escape Room which belongs to the address\r\n    mapping(address => uint) public EscaperoomAdmins;\r\n\r\n    /// @notice This event is emitted after rewarding the visitor with a new token\r\n    /// @dev \r\n    /// @param _visitor The address of the Escape Room visitor that recieved the token\r\n    /// @param _id The ID of the Escape Room\r\n    event visitorRewarded(address indexed _visitor, uint indexed _id);\r\n\r\n    /// @notice This event is emitted after the price per token was changed\r\n    /// @dev Price could be changed to Price per Escape Room\r\n    /// @param _admin The address of the admin of the contract\r\n    /// @param _pricePerCollectable The new price in wei per token a escape room holder must   \r\n    event pricePerCollectableUpdated(address indexed _admin, uint _pricePerCollectable);\r\n\r\n    /// @notice This function is executed when the contract is deployed to the Ethereum blockchain\r\n    /// @dev The URI is not in use yet, but can be used to retrieve off chain values about a token\r\n    constructor() public ERC1155PresetMinterPauser(\"https://erc1155metadata.azurewebsites.net/api/token/{id}\") {\r\n        // No code yet!\r\n    }\r\n\r\n    /// @notice This function creates a new Escape Room and gives free tokens once\r\n    /// @dev This function uses the OpenZeppelin Roles contract for checking the propriate address of the caller \r\n    /// @param _EscaperoomAdmin The address of the new admin of the new escape room\r\n    /// @param _Name The name of the new escape room\r\n    /// @param _FreeCollectables The number of tokens the new escape room will recieve for free\r\n    function createNewEscaperoom(address _EscaperoomAdmin, string memory _Name, uint _FreeCollectables) public {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE,msg.sender) == true, \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\");\r\n        require(_FreeCollectables >= 0, \"ERROR: TotalCollectables must be >= 0\");\r\n        require(_EscaperoomAdmin != address(0), \"ERROR: _EscaperoomAdmin is invalid\");\r\n        require(EscaperoomAdmins[_EscaperoomAdmin] == 0, \"ERROR: User already has an escape room account\");\r\n\r\n        EscapeRoomCounter = EscapeRoomCounter.add(1);\r\n\r\n        EscaperoomAdmins[_EscaperoomAdmin] = EscapeRoomCounter;\r\n\r\n        s_Escaperoom memory tmpEscaperoom;\r\n        tmpEscaperoom._Id = EscapeRoomCounter;\r\n        tmpEscaperoom._Name = _Name;\r\n        tmpEscaperoom._Admin = _EscaperoomAdmin;\r\n        tmpEscaperoom._TotalCollectables = _FreeCollectables;\r\n        tmpEscaperoom._enabled = true;\r\n\r\n        Escaperooms[EscapeRoomCounter] = tmpEscaperoom;\r\n        _mint(_EscaperoomAdmin, EscapeRoomCounter, _FreeCollectables, \"\");\r\n\r\n    }\r\n\r\n    /// @notice This function rewards the visitor of an escape room. After rewarding the event visitorRewarded is emitted\r\n    /// @dev This function can only be called by the admin of the escape room \r\n    /// @param _id The ID of the escape room\r\n    /// @param _visitor The visitor that must be rewarded\r\n    function rewardVisitor(uint _id, address _visitor) public {\r\n        require(EscaperoomAdmins[msg.sender] == _id, \"ERROR: User is not an admin of the Escaperoom!\");\r\n        require(balanceOf(_visitor, _id) == 0, \"ERROR: User has collectable already\");\r\n        safeTransferFrom(msg.sender,_visitor,_id,1,\"0x\");\r\n\r\n        // Emit event\r\n        emit visitorRewarded(_visitor, _id);\r\n    }\r\n\r\n    /// @notice This function rewards multiple visitors of an escape room. After rewarding the event visitorRewarded is emitted per visitor\r\n    /// @dev Function could be rewritten to safeBatchTransferFrom. Only reward user when user has not already been rewarded \r\n    /// @param _id The ID of the escape room\r\n    /// @param _visitors The visitors that must be rewarded\r\n    function rewardVisitorBatch(uint _id, address[] memory _visitors) public {\r\n        require(EscaperoomAdmins[msg.sender] == _id, \"ERROR: User is not an admin of the Escaperoom!\");\r\n\r\n        for (uint256 i = 0; i < _visitors.length; ++i) {\r\n            // Only reward visitor who haven't finished the room yet\r\n            if (balanceOf(_visitors[i], _id) == 0) {\r\n                safeTransferFrom(msg.sender,_visitors[i],_id,1,\"0x\");\r\n\r\n                // Emit event\r\n                emit visitorRewarded(_visitors[i], _id);\r\n            }\r\n        }\r\n    }\r\n\r\n    /// @notice This function mints new tokens for a escape room after paying the correct amount of ether (tokens * price) \r\n    /// @dev Function can only be invoked by the admin of the escape room\r\n    /// @param _id The ID of the escape room\r\n    /// @param _Amount The number of new tokens to mint\r\n    function mint(uint _id, uint _Amount) payable public {\r\n        require(EscaperoomAdmins[msg.sender] == _id, \"ERROR: User is not an admin of the Escaperoom!\");\r\n        require(_Amount > 0, \"ERROR: _Amount must be > 0\");\r\n        require(msg.value == (_Amount.mul(PricePerCollectable)), \"ERROR: Too much/less ether sent\");\r\n\r\n        address EscaperoomAdmin = Escaperooms[_id]._Admin;\r\n        _mint(EscaperoomAdmin, _id, _Amount, \"\");\r\n        Escaperooms[_id]._TotalCollectables = Escaperooms[_id]._TotalCollectables.add(_Amount);\r\n    }\r\n\r\n    /// @notice This function mints new tokens for a escape room without paying ether \r\n    /// @dev Function can only be invoked by the admin of the contract (via OpenZeppeling membership)\r\n    /// @param _id The ID of the escape room\r\n    /// @param _Amount The number of new tokens to mint (for free)\r\n    function mintAdmin(uint _id, uint _Amount) public {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE,msg.sender) == true, \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\");\r\n        require(_Amount > 0, \"ERROR: _Amount must be > 0\");\r\n\r\n        address EscaperoomAdmin = Escaperooms[_id]._Admin;\r\n        _mint(EscaperoomAdmin, _id, _Amount, \"\");\r\n        Escaperooms[_id]._TotalCollectables = Escaperooms[_id]._TotalCollectables.add(_Amount);\r\n    }\r\n\r\n    /// @notice This function sets the new price per token in wei and emits the pricePerCollectableUpdated after completing\r\n    /// @dev Function can only be invoked by the admin of the contract (via OpenZeppeling membership), price >= 0\r\n    /// @param _newPricePerCollectable The new price in wei per token for all escape rooms\r\n    function setPricePerCollectable(uint _newPricePerCollectable) public {\r\n        require(hasRole(DEFAULT_ADMIN_ROLE,msg.sender) == true, \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\");\r\n        require(_newPricePerCollectable >= 0, \"ERROR: _newPricePerCollectable must >= 0\");\r\n\r\n        PricePerCollectable = _newPricePerCollectable;\r\n        emit pricePerCollectableUpdated(msg.sender, _newPricePerCollectable);\r\n    }\r\n\r\n}",
  "sourcePath": "C:/Users/arnou/OneDrive - Infent/Infent/Blockchain/Escaperoom/contracts/Collectables.sol",
  "ast": {
    "absolutePath": "/C/Users/arnou/OneDrive - Infent/Infent/Blockchain/Escaperoom/contracts/Collectables.sol",
    "exportedSymbols": {
      "Collectables": [
        408
      ]
    },
    "id": 409,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC1155PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC1155PresetMinterPauser.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 1160,
        "src": "60:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC1155PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1159,
              "src": "507:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155PresetMinterPauser_$1159",
                "typeString": "contract ERC1155PresetMinterPauser"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "507:25:0"
          }
        ],
        "contractDependencies": [
          464,
          734,
          787,
          797,
          1159,
          2165,
          2233,
          2279,
          2390,
          2403,
          3089
        ],
        "contractKind": "contract",
        "documentation": "@title A contract for collecting NFT as a reward for completing an Escape Room\n @author Arnoud Commandeur\n @notice At the moment 1 address is only able to have 1 type of NFT, in futere 1 address should be able to handle multiple NFT's (rooms to reward) \n @dev Contract based on OpenZeppelin ERC1155PresetMinterPauser.sol contract",
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408,
          1159,
          2279,
          3089,
          2233,
          2165,
          2403,
          2390,
          787,
          797,
          734,
          464
        ],
        "name": "Collectables",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Collectables.s_Escaperoom",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "_Id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "604:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "604:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "_Name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "623:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "623:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "_Admin",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "646:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "_TotalCollectables",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "671:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "_enabled",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "705:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "705:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "s_Escaperoom",
            "nodeType": "StructDefinition",
            "scope": 408,
            "src": "573:153:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4049ffca",
            "id": 18,
            "name": "EscapeRoomCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "904:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "939:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c47cbb14",
            "id": 21,
            "name": "PricePerCollectable",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "1104:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1104:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1141:5:0",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8a3b13d",
            "id": 25,
            "name": "Escaperooms",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "1401:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
              "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1409:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1401:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom)"
              },
              "valueType": {
                "contractScope": null,
                "id": 23,
                "name": "s_Escaperoom",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15,
                "src": "1417:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage_ptr",
                  "typeString": "struct Collectables.s_Escaperoom"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85aa4cde",
            "id": 29,
            "name": "EscaperoomAdmins",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "1741:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1749:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1741:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 27,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1760:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted after rewarding the visitor with a new token\n @dev \n @param _visitor The address of the Escape Room visitor that recieved the token\n @param _id The ID of the Escape Room",
            "id": 35,
            "name": "visitorRewarded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "_visitor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 35,
                  "src": "2053:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 35,
                  "src": "2079:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:44:0"
            },
            "src": "2031:66:0"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted after the price per token was changed\n @dev Price could be changed to Price per Escape Room\n @param _admin The address of the admin of the contract\n @param _pricePerCollectable The new price in wei per token a escape room holder must   ",
            "id": 41,
            "name": "pricePerCollectableUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "2438:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "_pricePerCollectable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "2462:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2437:51:0"
            },
            "src": "2405:84:0"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "2804:33:0",
              "statements": []
            },
            "documentation": "@notice This function is executed when the contract is deployed to the Ethereum blockchain\n @dev The URI is not in use yet, but can be used to retrieve off chain values about a token",
            "id": 48,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f657263313135356d657461646174612e617a75726577656273697465732e6e65742f6170692f746f6b656e2f7b69647d",
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2744:58:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e0adf49b5ec93d551f5a110b18607424c6e3132aab1dd7515cdb24795f85394",
                      "typeString": "literal_string \"https://erc1155metadata.azurewebsites.net/api/token/{id}\""
                    },
                    "value": "https://erc1155metadata.azurewebsites.net/api/token/{id}"
                  }
                ],
                "id": 45,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 43,
                  "name": "ERC1155PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1159,
                  "src": "2718:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155PresetMinterPauser_$1159_$",
                    "typeString": "type(contract ERC1155PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2718:85:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2708:2:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2804:0:0"
            },
            "scope": 408,
            "src": "2697:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "3387:964:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "3414:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 60,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3433:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3433:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 58,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "3406:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3448:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3406:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c65",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3454:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        },
                        "value": "ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3398:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_FreeCollectables",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3536:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3536:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a20546f74616c436f6c6c65637461626c6573206d757374206265203e3d2030",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3560:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a07d74abf346533fe3280dd7736f645ad17e8250f1e83fdfe0ec0862bbf971",
                          "typeString": "literal_string \"ERROR: TotalCollectables must be >= 0\""
                        },
                        "value": "ERROR: TotalCollectables must be >= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a07d74abf346533fe3280dd7736f645ad17e8250f1e83fdfe0ec0862bbf971",
                          "typeString": "literal_string \"ERROR: TotalCollectables must be >= 0\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3528:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "_EscaperoomAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "3619:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3647:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3639:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3639:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3619:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f457363617065726f6f6d41646d696e20697320696e76616c6964",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3651:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6cf7ce9aaf200d6638d3a391851c1d36024e6413be4920e51d46220a62f599e",
                          "typeString": "literal_string \"ERROR: _EscaperoomAdmin is invalid\""
                        },
                        "value": "ERROR: _EscaperoomAdmin is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6cf7ce9aaf200d6638d3a391851c1d36024e6413be4920e51d46220a62f599e",
                          "typeString": "literal_string \"ERROR: _EscaperoomAdmin is invalid\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "3611:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 86,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "3707:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 88,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "_EscaperoomAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "3724:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3707:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3745:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3707:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205573657220616c72656164792068617320616e2065736361706520726f6f6d206163636f756e74",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3748:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba259a01abab5cbd998da4a24f2f55af111228e5eba61458ea48b6b2dc7b1c66",
                          "typeString": "literal_string \"ERROR: User already has an escape room account\""
                        },
                        "value": "ERROR: User already has an escape room account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba259a01abab5cbd998da4a24f2f55af111228e5eba61458ea48b6b2dc7b1c66",
                          "typeString": "literal_string \"ERROR: User already has an escape room account\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3699:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:98:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "EscapeRoomCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3810:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3852:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "EscapeRoomCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3830:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 824,
                        "src": "3830:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3830:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3810:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "EscaperoomAdmins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "3867:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3884:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3867:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "EscapeRoomCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3904:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3867:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:54:0"
                },
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "name": "tmpEscaperoom",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 153,
                      "src": "3934:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                        "typeString": "struct Collectables.s_Escaperoom"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 107,
                        "name": "s_Escaperoom",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "3934:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage_ptr",
                          "typeString": "struct Collectables.s_Escaperoom"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3934:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3978:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_Id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "3978:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "EscapeRoomCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3998:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3978:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "3978:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4026:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "4026:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 119,
                      "name": "_Name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4048:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4026:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "4026:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4064:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_Admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4064:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "_EscaperoomAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "4087:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4064:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "4064:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4114:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_TotalCollectables",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "4114:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 131,
                      "name": "_FreeCollectables",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4149:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4114:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4177:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "4177:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4202:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4177:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "Escaperooms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4219:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "EscapeRoomCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4231:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4219:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                        "typeString": "struct Collectables.s_Escaperoom storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "tmpEscaperoom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "4252:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                        "typeString": "struct Collectables.s_Escaperoom memory"
                      }
                    },
                    "src": "4219:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                      "typeString": "struct Collectables.s_Escaperoom storage ref"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "4219:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "4282:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "EscapeRoomCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4300:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_FreeCollectables",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "4319:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4338:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 146,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "4276:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:65:0"
                }
              ]
            },
            "documentation": "@notice This function creates a new Escape Room and gives free tokens once\n @dev This function uses the OpenZeppelin Roles contract for checking the propriate address of the caller \n @param _EscaperoomAdmin The address of the new admin of the new escape room\n @param _Name The name of the new escape room\n @param _FreeCollectables The number of tokens the new escape room will recieve for free",
            "functionSelector": "b30ca4d8",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewEscaperoom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_EscaperoomAdmin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "3309:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_Name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "3335:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_FreeCollectables",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "3356:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3308:71:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3387:0:0"
            },
            "scope": 408,
            "src": "3280:1071:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "4725:331:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 162,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "4744:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4761:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4761:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4744:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "4776:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4744:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d21",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4781:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        },
                        "value": "ERROR: User is not an admin of the Escaperoom!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4736:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4736:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 173,
                              "name": "_visitor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "4859:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 174,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "4869:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 172,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1258,
                            "src": "4849:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4849:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4877:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4849:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a20557365722068617320636f6c6c65637461626c6520616c7265616479",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4880:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9abb374ef66b496e6ed6ca0b69e33d7fff4653b453e660dd3a0c922bb24087d",
                          "typeString": "literal_string \"ERROR: User has collectable already\""
                        },
                        "value": "ERROR: User has collectable already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9abb374ef66b496e6ed6ca0b69e33d7fff4653b453e660dd3a0c922bb24087d",
                          "typeString": "literal_string \"ERROR: User has collectable already\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4841:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4841:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "4841:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4946:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4946:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "_visitor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "4957:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "4966:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4970:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3078",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4972:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                          "typeString": "literal_string \"0x\""
                        },
                        "value": "0x"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                          "typeString": "literal_string \"0x\""
                        }
                      ],
                      "id": 181,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "4929:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4929:48:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "_visitor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "5034:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "5044:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "visitorRewarded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "5018:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "EmitStatement",
                  "src": "5013:35:0"
                }
              ]
            },
            "documentation": "@notice This function rewards the visitor of an escape room. After rewarding the event visitorRewarded is emitted\n @dev This function can only be called by the admin of the escape room \n @param _id The ID of the escape room\n @param _visitor The visitor that must be rewarded",
            "functionSelector": "600c0718",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardVisitor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 196,
                  "src": "4690:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "name": "_visitor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 196,
                  "src": "4700:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4689:28:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4725:0:0"
            },
            "scope": 408,
            "src": "4667:389:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "5511:485:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "5530:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 208,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5547:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5547:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5530:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "5562:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5530:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d21",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5567:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        },
                        "value": "ERROR: User is not an admin of the Escaperoom!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        }
                      ],
                      "id": 204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5522:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5522:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "5522:94:0"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "5676:313:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 226,
                                  "name": "_visitors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "5775:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 228,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 227,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "5785:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5775:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 229,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "5789:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 225,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "5765:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5765:28:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5797:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5765:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 252,
                        "nodeType": "IfStatement",
                        "src": "5761:217:0",
                        "trueBody": {
                          "id": 251,
                          "nodeType": "Block",
                          "src": "5800:178:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 234,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5836:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5836:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 236,
                                      "name": "_visitors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 201,
                                      "src": "5847:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 238,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 237,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 215,
                                      "src": "5857:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5847:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 239,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "5860:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5864:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3078",
                                    "id": 241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5866:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                      "typeString": "literal_string \"0x\""
                                    },
                                    "value": "0x"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                      "typeString": "literal_string \"0x\""
                                    }
                                  ],
                                  "id": 233,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1489,
                                  "src": "5819:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,uint256,bytes memory)"
                                  }
                                },
                                "id": 242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5819:52:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 243,
                              "nodeType": "ExpressionStatement",
                              "src": "5819:52:0"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 245,
                                      "name": "_visitors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 201,
                                      "src": "5944:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 247,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 246,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 215,
                                      "src": "5954:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5944:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 248,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "5958:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 244,
                                  "name": "visitorRewarded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "5928:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5928:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 250,
                              "nodeType": "EmitStatement",
                              "src": "5923:39:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 218,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "5649:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "_visitors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "5653:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5653:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5649:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "initializationExpression": {
                    "assignments": [
                      215
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 215,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 254,
                        "src": "5634:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5634:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 217,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5646:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5634:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5671:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5673:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 224,
                    "nodeType": "ExpressionStatement",
                    "src": "5671:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5629:360:0"
                }
              ]
            },
            "documentation": "@notice This function rewards multiple visitors of an escape room. After rewarding the event visitorRewarded is emitted per visitor\n @dev Function could be rewritten to safeBatchTransferFrom. Only reward user when user has not already been rewarded \n @param _id The ID of the escape room\n @param _visitors The visitors that must be rewarded",
            "functionSelector": "0841a43d",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardVisitorBatch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 256,
                  "src": "5466:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "name": "_visitors",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 256,
                  "src": "5476:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 199,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5476:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 200,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5476:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5465:38:0"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5511:0:0"
            },
            "scope": 408,
            "src": "5438:558:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "6360:486:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 264,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "6379:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 267,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6396:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6396:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6379:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "6411:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6379:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d21",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6416:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        },
                        "value": "ERROR: User is not an admin of the Escaperoom!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6371:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6371:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "6484:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6494:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6484:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f416d6f756e74206d757374206265203e2030",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6497:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        },
                        "value": "ERROR: _Amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6545:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6545:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 285,
                                  "name": "PricePerCollectable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "6571:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 283,
                                  "name": "_Amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 260,
                                  "src": "6559:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 901,
                                "src": "6559:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6559:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 287,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6558:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6545:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a20546f6f206d7563682f6c6573732065746865722073656e74",
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6594:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c46bfa6ea53bdd1e89164dd8933f1c7d9ad6019e88b6a92387683e1dfb8b7be8",
                          "typeString": "literal_string \"ERROR: Too much/less ether sent\""
                        },
                        "value": "ERROR: Too much/less ether sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c46bfa6ea53bdd1e89164dd8933f1c7d9ad6019e88b6a92387683e1dfb8b7be8",
                          "typeString": "literal_string \"ERROR: Too much/less ether sent\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6537:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6537:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "6537:91:0"
                },
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "name": "EscaperoomAdmin",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 319,
                      "src": "6641:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6641:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 298,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "Escaperooms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "6667:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                        }
                      },
                      "id": 296,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "6679:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6667:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                        "typeString": "struct Collectables.s_Escaperoom storage ref"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_Admin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "6667:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6641:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "6707:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "6724:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 302,
                        "name": "_Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "6729:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6738:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 299,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "6701:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "Escaperooms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6752:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                          }
                        },
                        "id": 308,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "6764:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6752:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                          "typeString": "struct Collectables.s_Escaperoom storage ref"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_TotalCollectables",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "6752:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "6830:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 310,
                              "name": "Escaperooms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "6790:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                                "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 311,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 258,
                              "src": "6802:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6790:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                              "typeString": "struct Collectables.s_Escaperoom storage ref"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_TotalCollectables",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "6790:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 824,
                        "src": "6790:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6790:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6752:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "6752:86:0"
                }
              ]
            },
            "documentation": "@notice This function mints new tokens for a escape room after paying the correct amount of ether (tokens * price) \n @dev Function can only be invoked by the admin of the escape room\n @param _id The ID of the escape room\n @param _Amount The number of new tokens to mint",
            "functionSelector": "1b2ef1ca",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6321:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6321:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "name": "_Amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6331:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6320:24:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6360:0:0"
            },
            "scope": 408,
            "src": "6307:539:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "7209:409:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "7236:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 330,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7255:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7255:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 328,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "7228:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7228:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7270:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7228:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c65",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7276:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        },
                        "value": "ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7220:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7220:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "7220:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 339,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "7358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7368:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7358:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f416d6f756e74206d757374206265203e2030",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7371:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        },
                        "value": "ERROR: _Amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7350:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7350:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "7350:50:0"
                },
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "name": "EscaperoomAdmin",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 372,
                      "src": "7413:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7413:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "Escaperooms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "7439:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                        }
                      },
                      "id": 349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "7451:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7439:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                        "typeString": "struct Collectables.s_Escaperoom storage ref"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_Admin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "7439:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7413:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "7479:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "7496:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 355,
                        "name": "_Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "7501:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7510:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 352,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "7473:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7473:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "Escaperooms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "7524:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                          }
                        },
                        "id": 361,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "7536:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7524:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                          "typeString": "struct Collectables.s_Escaperoom storage ref"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_TotalCollectables",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "7524:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 368,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "7602:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "Escaperooms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7562:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                                "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "7574:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7562:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                              "typeString": "struct Collectables.s_Escaperoom storage ref"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_TotalCollectables",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "7562:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 824,
                        "src": "7562:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7562:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7524:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "7524:86:0"
                }
              ]
            },
            "documentation": "@notice This function mints new tokens for a escape room without paying ether \n @dev Function can only be invoked by the admin of the contract (via OpenZeppeling membership)\n @param _id The ID of the escape room\n @param _Amount The number of new tokens to mint (for free)",
            "functionSelector": "b6498859",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAdmin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 373,
                  "src": "7178:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "name": "_Amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 373,
                  "src": "7188:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7188:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7177:24:0"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7209:0:0"
            },
            "scope": 408,
            "src": "7159:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "8027:367:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "8054:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 381,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8073:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8073:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 379,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "8046:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8046:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8088:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "8046:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c65",
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8094:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        },
                        "value": "ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8038:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8038:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "8038:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "_newPricePerCollectable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "8176:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8203:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8176:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f6e65775072696365506572436f6c6c65637461626c65206d757374203e3d2030",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8206:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_137a650f8a106f4dac26e3a44c3a8b827a750a6a55d55db052aa94a3c7a0a242",
                          "typeString": "literal_string \"ERROR: _newPricePerCollectable must >= 0\""
                        },
                        "value": "ERROR: _newPricePerCollectable must >= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_137a650f8a106f4dac26e3a44c3a8b827a750a6a55d55db052aa94a3c7a0a242",
                          "typeString": "literal_string \"ERROR: _newPricePerCollectable must >= 0\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8168:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8168:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "8168:81:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "PricePerCollectable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "8262:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "_newPricePerCollectable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "8284:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8262:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "8262:45:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8350:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8350:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_newPricePerCollectable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "8362:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 400,
                      "name": "pricePerCollectableUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "8323:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8323:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "EmitStatement",
                  "src": "8318:68:0"
                }
              ]
            },
            "documentation": "@notice This function sets the new price per token in wei and emits the pricePerCollectableUpdated after completing\n @dev Function can only be invoked by the admin of the contract (via OpenZeppeling membership), price >= 0\n @param _newPricePerCollectable The new price in wei per token for all escape rooms",
            "functionSelector": "4e135adb",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPricePerCollectable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "name": "_newPricePerCollectable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 407,
                  "src": "7990:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7989:30:0"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8027:0:0"
            },
            "scope": 408,
            "src": "7958:436:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 409,
        "src": "482:7917:0"
      }
    ],
    "src": "33:8366:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/arnou/OneDrive - Infent/Infent/Blockchain/Escaperoom/contracts/Collectables.sol",
    "exportedSymbols": {
      "Collectables": [
        408
      ]
    },
    "id": 409,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/presets/ERC1155PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/presets/ERC1155PresetMinterPauser.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 409,
        "sourceUnit": 1160,
        "src": "60:71:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC1155PresetMinterPauser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1159,
              "src": "507:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155PresetMinterPauser_$1159",
                "typeString": "contract ERC1155PresetMinterPauser"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "507:25:0"
          }
        ],
        "contractDependencies": [
          464,
          734,
          787,
          797,
          1159,
          2165,
          2233,
          2279,
          2390,
          2403,
          3089
        ],
        "contractKind": "contract",
        "documentation": "@title A contract for collecting NFT as a reward for completing an Escape Room\n @author Arnoud Commandeur\n @notice At the moment 1 address is only able to have 1 type of NFT, in futere 1 address should be able to handle multiple NFT's (rooms to reward) \n @dev Contract based on OpenZeppelin ERC1155PresetMinterPauser.sol contract",
        "fullyImplemented": true,
        "id": 408,
        "linearizedBaseContracts": [
          408,
          1159,
          2279,
          3089,
          2233,
          2165,
          2403,
          2390,
          787,
          797,
          734,
          464
        ],
        "name": "Collectables",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Collectables.s_Escaperoom",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "_Id",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "604:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "604:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "_Name",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "623:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "623:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "name": "_Admin",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "646:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "_TotalCollectables",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "671:23:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "671:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "_enabled",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15,
                "src": "705:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "705:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "s_Escaperoom",
            "nodeType": "StructDefinition",
            "scope": 408,
            "src": "573:153:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4049ffca",
            "id": 18,
            "name": "EscapeRoomCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "904:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "939:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c47cbb14",
            "id": 21,
            "name": "PricePerCollectable",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "1104:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1104:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1141:5:0",
              "subdenomination": "wei",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8a3b13d",
            "id": 25,
            "name": "Escaperooms",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "1401:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
              "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 22,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1409:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1401:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom)"
              },
              "valueType": {
                "contractScope": null,
                "id": 23,
                "name": "s_Escaperoom",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15,
                "src": "1417:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage_ptr",
                  "typeString": "struct Collectables.s_Escaperoom"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "85aa4cde",
            "id": 29,
            "name": "EscaperoomAdmins",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 408,
            "src": "1741:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1749:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1741:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 27,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1760:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted after rewarding the visitor with a new token\n @dev \n @param _visitor The address of the Escape Room visitor that recieved the token\n @param _id The ID of the Escape Room",
            "id": 35,
            "name": "visitorRewarded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "name": "_visitor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 35,
                  "src": "2053:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": true,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 35,
                  "src": "2079:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2052:44:0"
            },
            "src": "2031:66:0"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted after the price per token was changed\n @dev Price could be changed to Price per Escape Room\n @param _admin The address of the admin of the contract\n @param _pricePerCollectable The new price in wei per token a escape room holder must   ",
            "id": 41,
            "name": "pricePerCollectableUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "name": "_admin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "2438:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "name": "_pricePerCollectable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "2462:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2437:51:0"
            },
            "src": "2405:84:0"
          },
          {
            "body": {
              "id": 47,
              "nodeType": "Block",
              "src": "2804:33:0",
              "statements": []
            },
            "documentation": "@notice This function is executed when the contract is deployed to the Ethereum blockchain\n @dev The URI is not in use yet, but can be used to retrieve off chain values about a token",
            "id": 48,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f657263313135356d657461646174612e617a75726577656273697465732e6e65742f6170692f746f6b656e2f7b69647d",
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2744:58:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6e0adf49b5ec93d551f5a110b18607424c6e3132aab1dd7515cdb24795f85394",
                      "typeString": "literal_string \"https://erc1155metadata.azurewebsites.net/api/token/{id}\""
                    },
                    "value": "https://erc1155metadata.azurewebsites.net/api/token/{id}"
                  }
                ],
                "id": 45,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 43,
                  "name": "ERC1155PresetMinterPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1159,
                  "src": "2718:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155PresetMinterPauser_$1159_$",
                    "typeString": "type(contract ERC1155PresetMinterPauser)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2718:85:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2708:2:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2804:0:0"
            },
            "scope": 408,
            "src": "2697:140:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 153,
              "nodeType": "Block",
              "src": "3387:964:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "3414:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 60,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3433:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3433:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 58,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "3406:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3448:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3406:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c65",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3454:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        },
                        "value": "ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3398:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 69,
                          "name": "_FreeCollectables",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3536:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3557:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3536:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a20546f74616c436f6c6c65637461626c6573206d757374206265203e3d2030",
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3560:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a07d74abf346533fe3280dd7736f645ad17e8250f1e83fdfe0ec0862bbf971",
                          "typeString": "literal_string \"ERROR: TotalCollectables must be >= 0\""
                        },
                        "value": "ERROR: TotalCollectables must be >= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a07d74abf346533fe3280dd7736f645ad17e8250f1e83fdfe0ec0862bbf971",
                          "typeString": "literal_string \"ERROR: TotalCollectables must be >= 0\""
                        }
                      ],
                      "id": 68,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3528:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "_EscaperoomAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "3619:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 79,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3647:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 78,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3639:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 77,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3639:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3619:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f457363617065726f6f6d41646d696e20697320696e76616c6964",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3651:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6cf7ce9aaf200d6638d3a391851c1d36024e6413be4920e51d46220a62f599e",
                          "typeString": "literal_string \"ERROR: _EscaperoomAdmin is invalid\""
                        },
                        "value": "ERROR: _EscaperoomAdmin is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6cf7ce9aaf200d6638d3a391851c1d36024e6413be4920e51d46220a62f599e",
                          "typeString": "literal_string \"ERROR: _EscaperoomAdmin is invalid\""
                        }
                      ],
                      "id": 75,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3611:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "3611:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 86,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "3707:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 88,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "_EscaperoomAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "3724:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3707:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3745:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3707:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205573657220616c72656164792068617320616e2065736361706520726f6f6d206163636f756e74",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3748:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba259a01abab5cbd998da4a24f2f55af111228e5eba61458ea48b6b2dc7b1c66",
                          "typeString": "literal_string \"ERROR: User already has an escape room account\""
                        },
                        "value": "ERROR: User already has an escape room account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba259a01abab5cbd998da4a24f2f55af111228e5eba61458ea48b6b2dc7b1c66",
                          "typeString": "literal_string \"ERROR: User already has an escape room account\""
                        }
                      ],
                      "id": 85,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3699:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:98:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:98:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "EscapeRoomCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3810:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3852:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 95,
                          "name": "EscapeRoomCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3830:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 824,
                        "src": "3830:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3830:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3810:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "3810:44:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 101,
                        "name": "EscaperoomAdmins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "3867:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 103,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "_EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3884:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3867:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "EscapeRoomCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3904:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3867:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:54:0"
                },
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "name": "tmpEscaperoom",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 153,
                      "src": "3934:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                        "typeString": "struct Collectables.s_Escaperoom"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 107,
                        "name": "s_Escaperoom",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 15,
                        "src": "3934:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage_ptr",
                          "typeString": "struct Collectables.s_Escaperoom"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 109,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3934:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 110,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3978:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_Id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "3978:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 113,
                      "name": "EscapeRoomCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3998:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3978:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "3978:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4026:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "4026:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 119,
                      "name": "_Name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4048:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4026:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "4026:27:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 122,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4064:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 124,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_Admin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "4064:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 125,
                      "name": "_EscaperoomAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "4087:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4064:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "4064:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4114:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_TotalCollectables",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "4114:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 131,
                      "name": "_FreeCollectables",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4149:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4114:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "4114:52:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "tmpEscaperoom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "4177:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                          "typeString": "struct Collectables.s_Escaperoom memory"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_enabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "4177:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4202:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4177:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "4177:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "Escaperooms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4219:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "EscapeRoomCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4231:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4219:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                        "typeString": "struct Collectables.s_Escaperoom storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "tmpEscaperoom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "4252:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_memory_ptr",
                        "typeString": "struct Collectables.s_Escaperoom memory"
                      }
                    },
                    "src": "4219:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                      "typeString": "struct Collectables.s_Escaperoom storage ref"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "4219:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "_EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "4282:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "EscapeRoomCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4300:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "_FreeCollectables",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "4319:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4338:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 146,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "4276:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:65:0"
                }
              ]
            },
            "documentation": "@notice This function creates a new Escape Room and gives free tokens once\n @dev This function uses the OpenZeppelin Roles contract for checking the propriate address of the caller \n @param _EscaperoomAdmin The address of the new admin of the new escape room\n @param _Name The name of the new escape room\n @param _FreeCollectables The number of tokens the new escape room will recieve for free",
            "functionSelector": "b30ca4d8",
            "id": 154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewEscaperoom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "name": "_EscaperoomAdmin",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "3309:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3309:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_Name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "3335:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_FreeCollectables",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 154,
                  "src": "3356:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3308:71:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3387:0:0"
            },
            "scope": 408,
            "src": "3280:1071:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "4725:331:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 162,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "4744:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 165,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4761:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4761:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4744:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 166,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "4776:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4744:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d21",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4781:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        },
                        "value": "ERROR: User is not an admin of the Escaperoom!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4736:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4736:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 173,
                              "name": "_visitor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "4859:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 174,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "4869:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 172,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1258,
                            "src": "4849:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view returns (uint256)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4849:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4877:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4849:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a20557365722068617320636f6c6c65637461626c6520616c7265616479",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4880:37:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9abb374ef66b496e6ed6ca0b69e33d7fff4653b453e660dd3a0c922bb24087d",
                          "typeString": "literal_string \"ERROR: User has collectable already\""
                        },
                        "value": "ERROR: User has collectable already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9abb374ef66b496e6ed6ca0b69e33d7fff4653b453e660dd3a0c922bb24087d",
                          "typeString": "literal_string \"ERROR: User has collectable already\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4841:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4841:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "4841:77:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4946:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4946:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "_visitor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "4957:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "4966:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4970:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3078",
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4972:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                          "typeString": "literal_string \"0x\""
                        },
                        "value": "0x"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                          "typeString": "literal_string \"0x\""
                        }
                      ],
                      "id": 181,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "4929:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4929:48:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "_visitor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "5034:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 192,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "5044:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 190,
                      "name": "visitorRewarded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "5018:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5018:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "EmitStatement",
                  "src": "5013:35:0"
                }
              ]
            },
            "documentation": "@notice This function rewards the visitor of an escape room. After rewarding the event visitorRewarded is emitted\n @dev This function can only be called by the admin of the escape room \n @param _id The ID of the escape room\n @param _visitor The visitor that must be rewarded",
            "functionSelector": "600c0718",
            "id": 196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardVisitor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 196,
                  "src": "4690:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "name": "_visitor",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 196,
                  "src": "4700:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4689:28:0"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4725:0:0"
            },
            "scope": 408,
            "src": "4667:389:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "5511:485:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 205,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "5530:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 208,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 206,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5547:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5547:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5530:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "5562:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5530:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d21",
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5567:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        },
                        "value": "ERROR: User is not an admin of the Escaperoom!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        }
                      ],
                      "id": 204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5522:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5522:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "5522:94:0"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "5676:313:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 226,
                                  "name": "_visitors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "5775:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 228,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 227,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 215,
                                  "src": "5785:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5775:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 229,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "5789:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 225,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "5765:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5765:28:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5797:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5765:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 252,
                        "nodeType": "IfStatement",
                        "src": "5761:217:0",
                        "trueBody": {
                          "id": 251,
                          "nodeType": "Block",
                          "src": "5800:178:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 234,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5836:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5836:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 236,
                                      "name": "_visitors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 201,
                                      "src": "5847:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 238,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 237,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 215,
                                      "src": "5857:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5847:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 239,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "5860:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5864:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "3078",
                                    "id": 241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5866:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                      "typeString": "literal_string \"0x\""
                                    },
                                    "value": "0x"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837",
                                      "typeString": "literal_string \"0x\""
                                    }
                                  ],
                                  "id": 233,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1489,
                                  "src": "5819:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,uint256,bytes memory)"
                                  }
                                },
                                "id": 242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5819:52:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 243,
                              "nodeType": "ExpressionStatement",
                              "src": "5819:52:0"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 245,
                                      "name": "_visitors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 201,
                                      "src": "5944:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 247,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 246,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 215,
                                      "src": "5954:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5944:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 248,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 198,
                                    "src": "5958:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 244,
                                  "name": "visitorRewarded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "5928:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5928:34:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 250,
                              "nodeType": "EmitStatement",
                              "src": "5923:39:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 218,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "5649:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "_visitors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "5653:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5653:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5649:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "initializationExpression": {
                    "assignments": [
                      215
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 215,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 254,
                        "src": "5634:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5634:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 217,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5646:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5634:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5671:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5673:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 224,
                    "nodeType": "ExpressionStatement",
                    "src": "5671:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "5629:360:0"
                }
              ]
            },
            "documentation": "@notice This function rewards multiple visitors of an escape room. After rewarding the event visitorRewarded is emitted per visitor\n @dev Function could be rewritten to safeBatchTransferFrom. Only reward user when user has not already been rewarded \n @param _id The ID of the escape room\n @param _visitors The visitors that must be rewarded",
            "functionSelector": "0841a43d",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rewardVisitorBatch",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 256,
                  "src": "5466:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5466:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "name": "_visitors",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 256,
                  "src": "5476:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 199,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5476:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 200,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5476:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5465:38:0"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5511:0:0"
            },
            "scope": 408,
            "src": "5438:558:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "6360:486:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 264,
                            "name": "EscaperoomAdmins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "6379:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 267,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6396:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6396:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6379:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 268,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "6411:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6379:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2055736572206973206e6f7420616e2061646d696e206f662074686520457363617065726f6f6d21",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6416:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        },
                        "value": "ERROR: User is not an admin of the Escaperoom!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4986e86a32e075aa4429d2bf59994531fe5a15c9b4ae038e70f63ccd4673f8b",
                          "typeString": "literal_string \"ERROR: User is not an admin of the Escaperoom!\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6371:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6371:94:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:94:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 274,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "6484:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6494:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6484:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f416d6f756e74206d757374206265203e2030",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6497:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        },
                        "value": "ERROR: _Amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6476:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 281,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6545:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6545:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 285,
                                  "name": "PricePerCollectable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "6571:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 283,
                                  "name": "_Amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 260,
                                  "src": "6559:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 901,
                                "src": "6559:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6559:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 287,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6558:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6545:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a20546f6f206d7563682f6c6573732065746865722073656e74",
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6594:33:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c46bfa6ea53bdd1e89164dd8933f1c7d9ad6019e88b6a92387683e1dfb8b7be8",
                          "typeString": "literal_string \"ERROR: Too much/less ether sent\""
                        },
                        "value": "ERROR: Too much/less ether sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c46bfa6ea53bdd1e89164dd8933f1c7d9ad6019e88b6a92387683e1dfb8b7be8",
                          "typeString": "literal_string \"ERROR: Too much/less ether sent\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6537:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6537:91:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "6537:91:0"
                },
                {
                  "assignments": [
                    293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 293,
                      "name": "EscaperoomAdmin",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 319,
                      "src": "6641:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 292,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6641:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 298,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 294,
                        "name": "Escaperooms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "6667:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                        }
                      },
                      "id": 296,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 295,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "6679:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6667:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                        "typeString": "struct Collectables.s_Escaperoom storage ref"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_Admin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "6667:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6641:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "6707:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "6724:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 302,
                        "name": "_Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "6729:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6738:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 299,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "6701:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 306,
                          "name": "Escaperooms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "6752:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                          }
                        },
                        "id": 308,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "6764:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6752:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                          "typeString": "struct Collectables.s_Escaperoom storage ref"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_TotalCollectables",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "6752:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "6830:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 310,
                              "name": "Escaperooms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "6790:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                                "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 311,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 258,
                              "src": "6802:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6790:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                              "typeString": "struct Collectables.s_Escaperoom storage ref"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_TotalCollectables",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "6790:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 824,
                        "src": "6790:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6790:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6752:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "6752:86:0"
                }
              ]
            },
            "documentation": "@notice This function mints new tokens for a escape room after paying the correct amount of ether (tokens * price) \n @dev Function can only be invoked by the admin of the escape room\n @param _id The ID of the escape room\n @param _Amount The number of new tokens to mint",
            "functionSelector": "1b2ef1ca",
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6321:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6321:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "name": "_Amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6331:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6331:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6320:24:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6360:0:0"
            },
            "scope": 408,
            "src": "6307:539:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 372,
              "nodeType": "Block",
              "src": "7209:409:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "7236:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 330,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7255:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "7255:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 328,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "7228:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7228:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7270:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "7228:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c65",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7276:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        },
                        "value": "ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7220:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7220:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "7220:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 339,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "7358:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7368:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7358:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f416d6f756e74206d757374206265203e2030",
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7371:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        },
                        "value": "ERROR: _Amount must be > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c16caa57a94627caae8b3133c9f17bdf0f387c9be386f12909b6682f8e959d",
                          "typeString": "literal_string \"ERROR: _Amount must be > 0\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7350:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7350:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 344,
                  "nodeType": "ExpressionStatement",
                  "src": "7350:50:0"
                },
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "name": "EscaperoomAdmin",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 372,
                      "src": "7413:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7413:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 347,
                        "name": "Escaperooms",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "7439:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                          "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                        }
                      },
                      "id": 349,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 348,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "7451:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7439:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                        "typeString": "struct Collectables.s_Escaperoom storage ref"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_Admin",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "7439:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7413:49:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 353,
                        "name": "EscaperoomAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "7479:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 354,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "7496:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 355,
                        "name": "_Amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "7501:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7510:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 352,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "7473:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7473:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 358,
                  "nodeType": "ExpressionStatement",
                  "src": "7473:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "Escaperooms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "7524:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                            "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                          }
                        },
                        "id": 361,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "7536:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7524:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                          "typeString": "struct Collectables.s_Escaperoom storage ref"
                        }
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_TotalCollectables",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "7524:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 368,
                          "name": "_Amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "7602:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 363,
                              "name": "Escaperooms",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "7562:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_s_Escaperoom_$15_storage_$",
                                "typeString": "mapping(uint256 => struct Collectables.s_Escaperoom storage ref)"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 364,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "7574:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7562:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_s_Escaperoom_$15_storage",
                              "typeString": "struct Collectables.s_Escaperoom storage ref"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_TotalCollectables",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12,
                          "src": "7562:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 824,
                        "src": "7562:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7562:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7524:86:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "7524:86:0"
                }
              ]
            },
            "documentation": "@notice This function mints new tokens for a escape room without paying ether \n @dev Function can only be invoked by the admin of the contract (via OpenZeppeling membership)\n @param _id The ID of the escape room\n @param _Amount The number of new tokens to mint (for free)",
            "functionSelector": "b6498859",
            "id": 373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintAdmin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 373,
                  "src": "7178:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "name": "_Amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 373,
                  "src": "7188:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7188:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7177:24:0"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7209:0:0"
            },
            "scope": 408,
            "src": "7159:459:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "8027:367:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 380,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "8054:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 381,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8073:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "8073:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 379,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "8046:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8046:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8088:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "8046:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a2043616c6c696e67206164647265737320646f6573206e6f7420686176652044454641554c545f41444d494e5f524f4c4520726f6c65",
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8094:62:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        },
                        "value": "ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1be82277825c42bf1bab6cfe21f7c802c3cb95f399e7f6072caeb847fcbfa5a",
                          "typeString": "literal_string \"ERROR: Calling address does not have DEFAULT_ADMIN_ROLE role\""
                        }
                      ],
                      "id": 378,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8038:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8038:119:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "8038:119:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "_newPricePerCollectable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "8176:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8203:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8176:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552524f523a205f6e65775072696365506572436f6c6c65637461626c65206d757374203e3d2030",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8206:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_137a650f8a106f4dac26e3a44c3a8b827a750a6a55d55db052aa94a3c7a0a242",
                          "typeString": "literal_string \"ERROR: _newPricePerCollectable must >= 0\""
                        },
                        "value": "ERROR: _newPricePerCollectable must >= 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_137a650f8a106f4dac26e3a44c3a8b827a750a6a55d55db052aa94a3c7a0a242",
                          "typeString": "literal_string \"ERROR: _newPricePerCollectable must >= 0\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8168:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8168:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "8168:81:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 396,
                      "name": "PricePerCollectable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "8262:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "_newPricePerCollectable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "8284:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8262:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "8262:45:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 401,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8350:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8350:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 403,
                        "name": "_newPricePerCollectable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 375,
                        "src": "8362:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 400,
                      "name": "pricePerCollectableUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "8323:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8323:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 405,
                  "nodeType": "EmitStatement",
                  "src": "8318:68:0"
                }
              ]
            },
            "documentation": "@notice This function sets the new price per token in wei and emits the pricePerCollectableUpdated after completing\n @dev Function can only be invoked by the admin of the contract (via OpenZeppeling membership), price >= 0\n @param _newPricePerCollectable The new price in wei per token for all escape rooms",
            "functionSelector": "4e135adb",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPricePerCollectable",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 375,
                  "name": "_newPricePerCollectable",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 407,
                  "src": "7990:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 374,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7989:30:0"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8027:0:0"
            },
            "scope": 408,
            "src": "7958:436:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 409,
        "src": "482:7917:0"
      }
    ],
    "src": "33:8366:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x6d55988fd84c3eae3398916f51ca9d47bf4e053e5a444b72ee7583fc0143ebc3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_pricePerCollectable",
              "type": "uint256"
            }
          ],
          "name": "pricePerCollectableUpdated",
          "type": "event"
        },
        "0x08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_visitor",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "visitorRewarded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x23Cd79760d8d7e0262f66Be9e9017b59777AF496",
      "transactionHash": "0x8e970cbcec5e20bc46ac93647953fa1c8e16b9ec825ecae549fabc0207a9577d"
    },
    "1605541001382": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x6d55988fd84c3eae3398916f51ca9d47bf4e053e5a444b72ee7583fc0143ebc3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_pricePerCollectable",
              "type": "uint256"
            }
          ],
          "name": "pricePerCollectableUpdated",
          "type": "event"
        },
        "0x08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_visitor",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "visitorRewarded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC9bD283F7386814dC276915bc4fdcF4A93143a22",
      "transactionHash": "0xbfa433f0dc3ee9163734279ed1fe8fff53342ff7f24cd6c80abc4e489287ce32"
    },
    "1605541982554": {
      "events": {
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        "0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        "0x6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x6d55988fd84c3eae3398916f51ca9d47bf4e053e5a444b72ee7583fc0143ebc3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_pricePerCollectable",
              "type": "uint256"
            }
          ],
          "name": "pricePerCollectableUpdated",
          "type": "event"
        },
        "0x08dcc1ac80d12aee46948ffde43bee0bba6bfc44fdcf14b55ba8cee9249213f5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_visitor",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "name": "visitorRewarded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb446853A189f4F8bB564D0cb07F940D34bB7a1ba",
      "transactionHash": "0xb0c5a358f72560a0971c1e2c5681a1d85d332e6ed1802c54112cd69ed20fd3a3"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-11-16T16:25:51.174Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Arnoud Commandeur",
    "details": "Contract based on OpenZeppelin ERC1155PresetMinterPauser.sol contract",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}.     * Requirements:     * - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}.     * Requirements:     * - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "The URI is not in use yet, but can be used to retrieve off chain values about a token"
      },
      "createNewEscaperoom(address,string,uint256)": {
        "details": "This function uses the OpenZeppelin Roles contract for checking the propriate address of the caller ",
        "params": {
          "_EscaperoomAdmin": "The address of the new admin of the new escape room",
          "_FreeCollectables": "The number of tokens the new escape room will recieve for free",
          "_Name": "The name of the new escape room"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "mint(address,uint256,uint256,bytes)": {
        "details": "Creates `amount` new tokens for `to`, of token type `id`.     * See {ERC1155-_mint}.     * Requirements:     * - the caller must have the `MINTER_ROLE`."
      },
      "mint(uint256,uint256)": {
        "details": "Function can only be invoked by the admin of the escape room",
        "params": {
          "_Amount": "The number of new tokens to mint",
          "_id": "The ID of the escape room"
        }
      },
      "mintAdmin(uint256,uint256)": {
        "details": "Function can only be invoked by the admin of the contract (via OpenZeppeling membership)",
        "params": {
          "_Amount": "The number of new tokens to mint (for free)",
          "_id": "The ID of the escape room"
        }
      },
      "mintBatch(address,uint256[],uint256[],bytes)": {
        "details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."
      },
      "pause()": {
        "details": "Pauses all token transfers.     * See {ERC1155Pausable} and {Pausable-_pause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
      },
      "rewardVisitor(uint256,address)": {
        "details": "This function can only be called by the admin of the escape room ",
        "params": {
          "_id": "The ID of the escape room",
          "_visitor": "The visitor that must be rewarded"
        }
      },
      "rewardVisitorBatch(uint256,address[])": {
        "details": "Function could be rewritten to safeBatchTransferFrom. Only reward user when user has not already been rewarded ",
        "params": {
          "_id": "The ID of the escape room",
          "_visitors": "The visitors that must be rewarded"
        }
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "setPricePerCollectable(uint256)": {
        "details": "Function can only be invoked by the admin of the contract (via OpenZeppeling membership), price >= 0",
        "params": {
          "_newPricePerCollectable": "The new price in wei per token for all escape rooms"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "unpause()": {
        "details": "Unpauses all token transfers.     * See {ERC1155Pausable} and {Pausable-_unpause}.     * Requirements:     * - the caller must have the `PAUSER_ROLE`."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}.     * This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].     * Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "title": "A contract for collecting NFT as a reward for completing an Escape Room"
  },
  "userdoc": {
    "methods": {
      "constructor": "This function is executed when the contract is deployed to the Ethereum blockchain",
      "createNewEscaperoom(address,string,uint256)": {
        "notice": "This function creates a new Escape Room and gives free tokens once"
      },
      "mint(uint256,uint256)": {
        "notice": "This function mints new tokens for a escape room after paying the correct amount of ether (tokens * price) "
      },
      "mintAdmin(uint256,uint256)": {
        "notice": "This function mints new tokens for a escape room without paying ether "
      },
      "rewardVisitor(uint256,address)": {
        "notice": "This function rewards the visitor of an escape room. After rewarding the event visitorRewarded is emitted"
      },
      "rewardVisitorBatch(uint256,address[])": {
        "notice": "This function rewards multiple visitors of an escape room. After rewarding the event visitorRewarded is emitted per visitor"
      },
      "setPricePerCollectable(uint256)": {
        "notice": "This function sets the new price per token in wei and emits the pricePerCollectableUpdated after completing"
      }
    },
    "notice": "At the moment 1 address is only able to have 1 type of NFT, in futere 1 address should be able to handle multiple NFT's (rooms to reward) "
  }
}